<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.1.2">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="https://app.prolific.co/submissions/complete?cc=5FD012A4" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'session': '001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1440, 900]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="Pirates" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="exploit">
      <CodeComponent name="code_exploit">
        <Param name="Begin Experiment" updates="constant" val="# define variables used during this phase&amp;#10;opacity_val=0&amp;#10;rewval=0&amp;#10;rew_displayed=0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="// set remaining actions to display to participant&amp;#10;actions_remaining=total_actions_allowed-actions_blk;&amp;#10;&amp;#10;if ((actions_remaining&lt;0)) {&amp;#10;    actions_remaining=0;&amp;#10;    }&amp;#10;&amp;#10;actions_remaining_msg='Actions left in block: ' + actions_remaining.toString();&amp;#10;&amp;#10;// if just entered patch, start timer&amp;#10;if ((exploit_actions===0)) { &amp;#10;    patchTime=0;&amp;#10;    startTime = Date.now();&amp;#10;}" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# start patch timer&amp;#10;if start_patch_timer:&amp;#10;    patch_timer=core.Clock()&amp;#10;    start_patch_timer=0&amp;#10;&amp;#10;# start timer for feedback&amp;#10;timer = core.Clock()&amp;#10;&amp;#10;# update action counter&amp;#10;exploit_actions=exploit_actions+1;&amp;#10;&amp;#10;# allow rew_disp to be set&amp;#10;set_rew_disp=1&amp;#10;&amp;#10;# replenish alternative patches&amp;#10;# and store value during decision phase&amp;#10;&amp;#10;# 1. find alternative patches&amp;#10;alt_islds=list(set([1,2,3])-set([curr_isld]))&amp;#10;&amp;#10;# 2. replenish based on pre-set constant&amp;#10;isld_rvals[alt_islds[0]-1] = isld_rvals[alt_islds[0]-1] + isld_replen_rates[alt_islds[0]-1]**patch_timer.getTime()&amp;#10;isld_rvals[alt_islds[1]-1] = isld_rvals[alt_islds[1]-1] + isld_replen_rates[alt_islds[1]-1]**patch_timer.getTime()&amp;#10;&amp;#10;# 3. cap at the maximum value&amp;#10;if isld_rvals[alt_islds[0]-1]&gt;isld_svals[alt_islds[0]-1]:&amp;#10;    isld_rvals[alt_islds[0]-1]=isld_svals[alt_islds[0]-1]&amp;#10;&amp;#10;if isld_rvals[alt_islds[1]-1]&gt;isld_svals[alt_islds[1]-1]:&amp;#10;    isld_rvals[alt_islds[1]-1]=isld_svals[alt_islds[1]-1]&amp;#10;&amp;#10;# 4. save patch values&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# give reward feedback for 1 second&amp;#10;# after an exploit action, &amp;#10;# else make the text transparent&amp;#10;if timer.getTime()&lt;=1:&amp;#10;    opacity_val=1&amp;#10;    if set_rew_disp==1:&amp;#10;        # calculate reward based on exponential decay&amp;#10;        base=isld_svals[curr_isld-1]&amp;#10;        power=0.5*-patch_timer.getTime()&amp;#10;        isld_rvals[curr_isld-1]=pow(base,power)&amp;#10;        rew_displayed=isld_rvals[curr_isld-1]&amp;#10;        set_rew_disp=0&amp;#10;else:&amp;#10;    opacity_val=0&amp;#10;    " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((terminate_expt===1)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }&amp;#10;&amp;#10;// force the first action to be a treasure dig&amp;#10;if ((exploit_actions===0)) {&amp;#10;valid_keypress=keys_first_exploit_allowed.includes(exploit_resp.keys);&amp;#10;if ((valid_keypress===true)) {&amp;#10;    continueRoutine=false;&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;// after one dig, allow digging or sailing responses&amp;#10;if ((exploit_actions&gt;0)) {&amp;#10;valid_keypress=keys_exploit_allowed.includes(exploit_resp.keys);&amp;#10;if ((valid_keypress===true)) {&amp;#10;    continueRoutine=false;&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;// if the total actions allowed in the block have been taken, end the block&amp;#10;if ((actions_remaining===0)) {&amp;#10;    continueRoutine=false;&amp;#10;    exploit_loop.finished=true;&amp;#10;    trials.finished=true;&amp;#10;    fbk_opacity=0; // don't display fbk if blocks ends with island selection&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="// update exploit actions&amp;#10;if ((exploit_resp.keys === &quot;space&quot;)) {&amp;#10;decision_type=2;&amp;#10;}&amp;#10;&amp;#10;if ((exploit_resp.keys === &quot;s&quot;)) {&amp;#10;    decision_type=3;&amp;#10;    }&amp;#10;&amp;#10;if ((actions_remaining&gt;0)) { //get mean reward at point of decision&amp;#10;mean_reward_blk=points_blk/actions_blk;&amp;#10;mean_reward_entire_experiment=total_points/total_actions;&amp;#10;}&amp;#10;&amp;#10;// compute the reward value of the current patch&amp;#10;if ((exploit_actions===0)) { // if first action, use actual patch values&amp;#10;    rew_displayed = Math.floor(isld_rvals[(curr_isld - 1)]);&amp;#10;    rew_displayed_msg='+' + rew_displayed.toString();&amp;#10;    &amp;#10;    if (( Math.floor(isld_rvals[(curr_isld - 1)])===isld_svals[(curr_isld - 1)] )) {&amp;#10;        treasure_pos=[];&amp;#10;        treasure_pos=[treasure_pos_orig[0]+0.0075,treasure_pos_orig[1]];&amp;#10;        }&amp;#10;}&amp;#10;&amp;#10;if ((exploit_actions&gt;0)) { // if beyond first action, enact decay&amp;#10;    base = 1-k; // k is the decay parameter&amp;#10;    power = (exploit_actions);&amp;#10;    isld_rvals[(curr_isld - 1)] = isld_rvals[(curr_isld - 1)] * Math.pow(base, power);&amp;#10;    rew_displayed = Math.floor(isld_rvals[(curr_isld - 1)]);&amp;#10;    rew_displayed_msg='+' + rew_displayed.toString();&amp;#10;    }&amp;#10;&amp;#10;// display coin at normal position if two digit reward&amp;#10;if (( Math.floor(isld_rvals[(curr_isld - 1)])&lt;isld_svals[(curr_isld - 1)] )) {&amp;#10;        treasure_pos=[];&amp;#10;        treasure_pos=[treasure_pos_orig[0],treasure_pos_orig[1]];&amp;#10;    }&amp;#10;&amp;#10;&amp;#10;// save data&amp;#10;psychoJS.experiment.addData('blk_number', curr_blk_number);&amp;#10;psychoJS.experiment.addData('blk_type', curr_blk); // 1 for forced choice, 2 for free choice&amp;#10;psychoJS.experiment.addData('mean reward block', Math.floor(mean_reward_blk)); &amp;#10;psychoJS.experiment.addData('current patch position', curr_isld); // 1=left, 2=top, 3=right&amp;#10;psychoJS.experiment.addData('patch value left', Math.floor(isld_rvals[0])); &amp;#10;psychoJS.experiment.addData('patch value top', Math.floor(isld_rvals[1])); &amp;#10;psychoJS.experiment.addData('patch value right', Math.floor(isld_rvals[2])); &amp;#10;psychoJS.experiment.addData('patch replenish left', isld_replen_rates[0]); &amp;#10;psychoJS.experiment.addData('patch replenish top', isld_replen_rates[1]); &amp;#10;psychoJS.experiment.addData('patch replenish right', isld_replen_rates[2]); &amp;#10;psychoJS.experiment.addData('current patch replenish rate', isld_replen_rates[curr_isld-1]); // 1=slow, 2=medium, 3=fast&amp;#10;psychoJS.experiment.addData('patch value slow', Math.floor(isld_rvals[slow_idx])); &amp;#10;psychoJS.experiment.addData('patch value medium', Math.floor(isld_rvals[medium_idx])); &amp;#10;psychoJS.experiment.addData('patch value fast', Math.floor(isld_rvals[fast_idx])); &amp;#10;psychoJS.experiment.addData('patch replenish slow', isld_replen_rates[slow_idx]); &amp;#10;psychoJS.experiment.addData('patch replenish medium', isld_replen_rates[medium_idx]); &amp;#10;psychoJS.experiment.addData('patch replenish fast', isld_replen_rates[fast_idx]); &amp;#10;psychoJS.experiment.addData('decision type', decision_type); // Use 1 for select, 2 for stay, 3 for leave&amp;#10;psychoJS.experiment.addData('trial phase', 3); // 1 for select, 2 for travel, 3 for exploit/stay decision, 4 for exploit feedback&amp;#10;&amp;#10;// selection variables&amp;#10;psychoJS.experiment.addData('patch_selection_key', 0);&amp;#10;psychoJS.experiment.addData('patch_selection_RT', 0);&amp;#10;&amp;#10;// exploit loop variables&amp;#10;psychoJS.experiment.addData('actual_rew_gain', Math.floor(isld_rvals[(curr_isld - 1)]));&amp;#10;psychoJS.experiment.addData('rew_fbk_displayed', rew_displayed);&amp;#10;psychoJS.experiment.addData('blk_points', Math.floor(points_blk));&amp;#10;psychoJS.experiment.addData('blk_actions', actions_blk);&amp;#10;psychoJS.experiment.addData('exploit_phase_key', exploit_resp.keys);&amp;#10;psychoJS.experiment.addData('exploit_phase_RT', exploit_resp.rt);&amp;#10;&amp;#10;if ((exploit_resp.keys === &quot;space&quot;)) {&amp;#10;psychoJS.experiment.addData('num_exploit_actions', 0);&amp;#10;}&amp;#10;&amp;#10;if ((exploit_resp.keys === &quot;s&quot;)) {&amp;#10;psychoJS.experiment.addData('num_exploit_actions', exploit_actions); // just save on leaving to make analysis easier&amp;#10;}&amp;#10;&amp;#10;// broader variables&amp;#10;psychoJS.experiment.addData('mean reward entire experiment', Math.floor(mean_reward_entire_experiment));&amp;#10;psychoJS.experiment.addData('total_points', Math.floor(total_points));&amp;#10;psychoJS.experiment.addData('total_actions', total_actions);&amp;#10;psychoJS.experiment.addData('actions_remaining', actions_remaining);&amp;#10;psychoJS.experiment.addData('time in patch (seconds)', patchTime);&amp;#10;psychoJS.experiment.nextEntry()&amp;#10;&amp;#10;// update action counters&amp;#10;actions_blk=(actions_blk + 1);&amp;#10;total_actions=(total_actions + 1);&amp;#10;&amp;#10;// update exploit actions&amp;#10;if ((exploit_resp.keys === &quot;space&quot;)) {&amp;#10;exploit_actions = (exploit_actions + 1);&amp;#10;}&amp;#10;&amp;#10;// update points&amp;#10;if ((exploit_resp.keys === &quot;space&quot;)) {&amp;#10;if ((actions_remaining&gt;0)) {&amp;#10;points_blk=points_blk+isld_rvals[(curr_isld - 1)];&amp;#10;total_points=total_points+isld_rvals[(curr_isld - 1)];&amp;#10;}&amp;#10;}&amp;#10;&amp;#10;if ((actions_remaining&gt;0)) { //get mean reward at point of decision&amp;#10;mean_reward_blk=points_blk/actions_blk;&amp;#10;mean_reward_entire_experiment=total_points/total_actions;&amp;#10;}&amp;#10;&amp;#10;// return to selection screen&amp;#10;if ((exploit_resp.keys === &quot;s&quot;)) {&amp;#10;    continueRoutine=false;&amp;#10;    exploit_loop.finished=true;&amp;#10;    trials.finished=true;&amp;#10;    }" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# save patch values when the exploit decision is made&amp;#10;# then return to the selection phase&amp;#10;if exploit_resp.keys=='s':&amp;#10;        # current patch&amp;#10;        base=isld_svals[curr_isld-1]&amp;#10;        power=0.5*-patch_timer.getTime()&amp;#10;        isld_rvals[curr_isld-1]=pow(base,power)&amp;#10;        &amp;#10;        # alternative patches&amp;#10;        # 1. find alternative patches&amp;#10;        alt_islds=list(set([1,2,3])-set([curr_isld]))&amp;#10;&amp;#10;        # 2. replenish based on pre-set constant&amp;#10;        isld_rvals[alt_islds[0]-1] = isld_rvals[alt_islds[0]-1] + isld_replen_rates[alt_islds[0]-1]**patch_timer.getTime()&amp;#10;        isld_rvals[alt_islds[1]-1] = isld_rvals[alt_islds[1]-1] + isld_replen_rates[alt_islds[1]-1]**patch_timer.getTime()&amp;#10;&amp;#10;        # 3. cap at the maximum value&amp;#10;        if isld_rvals[alt_islds[0]-1]&gt;isld_svals[alt_islds[0]-1]:&amp;#10;            isld_rvals[alt_islds[0]-1]=isld_svals[alt_islds[0]-1]&amp;#10;&amp;#10;        if isld_rvals[alt_islds[1]-1]&gt;isld_svals[alt_islds[1]-1]:&amp;#10;            isld_rvals[alt_islds[1]-1]=isld_svals[alt_islds[1]-1]&amp;#10;&amp;#10;        # break loop&amp;#10;        exploit_loop.finished=True&amp;#10;&amp;#10;        " valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_exploit" valType="code"/>
      </CodeComponent>
      <PolygonComponent name="ocean_exploit">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$ocean_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$ocean_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="ocean_exploit" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="set every repeat" val="$ocean_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld1_exploit">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="25" valType="int"/>
        <Param name="name" updates="None" val="isld1_exploit" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld1_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld2_exploit">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="25" valType="int"/>
        <Param name="name" updates="None" val="isld2_exploit" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld2_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld3_exploit">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="25" valType="int"/>
        <Param name="name" updates="None" val="isld3_exploit" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld3_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <ImageComponent name="agent_exploit">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="$agent" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="agent_exploit" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$ship_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="$agent_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="points_txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="points_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="0" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$rew_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$rew_displayed" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="dig_sail_txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="dig_sail_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="[0,0]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press space to dig for treasure and s to set sail" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="exploit_action_count">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="$action_msg_size" valType="code"/>
        <Param name="name" updates="None" val="exploit_action_count" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$action_msg_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$actions_remaining_msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="exploit_resp">
        <Param name="allowedKeys" updates="constant" val="'space','s'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="exploit_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="select">
      <CodeComponent name="code_select">
        <Param name="Begin Experiment" updates="constant" val="# set params&amp;#10;# set block duration in seconds&amp;#10;blk_duration=3*60&amp;#10;&amp;#10;# conditional to start block timer&amp;#10;start_blk_timer=1&amp;#10;&amp;#10;# set block types&amp;#10;blk_order=[1,2,1,2]&amp;#10;# shuffle for main expt&amp;#10;blk_idx=0;&amp;#10;curr_blk=blk_order[blk_idx]&amp;#10;&amp;#10;# set object sizes&amp;#10;ocean_size=(0.8, 0.8)&amp;#10;isld_size=(0.1, 0.1)&amp;#10;&amp;#10;# set object positions&amp;#10;ocean_pos=(0, 0)&amp;#10;isld1_pos=(-0.3, -0.25)&amp;#10;isld2_pos=(0, 0.25)&amp;#10;isld3_pos=(0.3, -0.25)&amp;#10;&amp;#10;# set text positions&amp;#10;f_keypos=(-0.3,-0.35)&amp;#10;j_keypos=(0, 0.15)&amp;#10;k_keypos=(0.3, -0.35)&amp;#10;&amp;#10;# set object values&amp;#10;isld_svals=[100,100,100]&amp;#10;isld_rvals=[100,100,100] # this will be updated&amp;#10;&amp;#10;# set replenish rates for different islands&amp;#10;isld_replen_rates=[20,40,60]&amp;#10;# note shuffle these for expt&amp;#10;&amp;#10;# set object colours&amp;#10;ocean_col=[12/255,164/255,255/255]&amp;#10;isld_col=[0,137/255, 82/255]&amp;#10;&amp;#10;# define additional variables&amp;#10;box_pos=[0,0]&amp;#10;box_size=[0.025, 0.025]&amp;#10;keys_allowed=['f','j','k']" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="// set decay constant&amp;#10;k=0.05;&amp;#10;&amp;#10;// set island replenish rates&amp;#10;//isld_replen_rates = [5/50, 10/50, 15/50];&amp;#10;isld_replen_rates = [2.5/50, 5/50, 7.5/50];&amp;#10;initial_replen_rates = [...isld_replen_rates]; //backup copy&amp;#10;&amp;#10;// set object start values and a value vector that can be updated during the block&amp;#10;isld_svals = [100, 100, 100];&amp;#10;//isld_rvals = [100, 100, 100];&amp;#10;&amp;#10;// set total actions allowed in block&amp;#10;total_actions_allowed=200;&amp;#10;&amp;#10;// initialise action counter for block and full experiment&amp;#10;actions_blk=0;&amp;#10;total_actions=0;&amp;#10;patchTime=0;&amp;#10;&amp;#10;// set durations&amp;#10;travel_duration = 1;&amp;#10;fbk_duration=1.5;&amp;#10;&amp;#10;// set curr_isld to non-island value for first trial&amp;#10;curr_isld=10;&amp;#10;&amp;#10;// set alt_islds for first trial&amp;#10;alt_islds=[1,2,3];&amp;#10;&amp;#10;// set keys allowed&amp;#10;keys_allowed = ['f', 'j', 'k'];&amp;#10;&amp;#10;// set image paths&amp;#10;agent = &quot;stimuli/pirate_ship.png&quot;;&amp;#10;bounty = &quot;stimuli/coin.png&quot;;&amp;#10;&amp;#10;// set travel message&amp;#10;travel_msg='Sailing in progress...'&amp;#10;&amp;#10;// set object sizes&amp;#10;ocean_size = [0.9, 0.9];&amp;#10;isld_size = [0.25, 0.25];&amp;#10;agent_size = [0.1, 0.1];&amp;#10;treasure_size = [0.025, 0.025];&amp;#10;box_size = [0.025, 0.025]; // forced choice box&amp;#10;center_txt_pos=[0, -0.075];&amp;#10;cross_size = 0.035;&amp;#10;action_msg_size = 0.02;&amp;#10;&amp;#10;// set object positions&amp;#10;ocean_pos = [0, 0];&amp;#10;isld1_pos = [(- 0.3), (- 0.25)];&amp;#10;isld2_pos = [0, 0.25];&amp;#10;isld3_pos = [0.3, (- 0.25)];&amp;#10;curr_pos = [0, 0];&amp;#10;ship_pos = [0, 0];&amp;#10;goal_pos = [0, 0];&amp;#10;treasure_pos = [0, 0];&amp;#10;box_pos = [0, 0];&amp;#10;f_keypos = [(- 0.3), (- 0.35)];&amp;#10;j_keypos = [0, 0.15];&amp;#10;k_keypos = [0.3, (- 0.35)];&amp;#10;action_msg_pos = [0.325, 0.425];&amp;#10;&amp;#10;// set object colours&amp;#10;ocean_col = [(12 / 255), (164 / 255), (255 / 255)];&amp;#10;isld_col = [0, (137 / 255), (82 / 255)];&amp;#10;box_line_col = [0, (255 / 255), 0];&amp;#10;&amp;#10;// set opacity values&amp;#10;box_opacity = 0;&amp;#10;f_key_opacity=1;&amp;#10;j_key_opacity=1;&amp;#10;k_key_opacity=1;&amp;#10;cross_opacity=1;&amp;#10;fbk_opacity=1;&amp;#10;&amp;#10;// initialise reward feedback to display and other reward variables&amp;#10;rew_displayed = 0;&amp;#10;total_points=0;&amp;#10;points_blk=0;&amp;#10;mean_reward_block=0;&amp;#10;mean_reward_entire_experiment=0;&amp;#10;&amp;#10;// set select key txt&amp;#10;f_key_txt='F';&amp;#10;j_key_txt='J';&amp;#10;k_key_txt='K';&amp;#10;&amp;#10;// set keys allowed for first action in an island&amp;#10;keys_first_exploit_allowed=['space']; // ensure first action must be a dig&amp;#10;&amp;#10;// set keys allowed for remaining actions in an island&amp;#10;keys_exploit_allowed=['space','s']; // allows actions after the first to be a dig or to set sail" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="// if block type is forced, randomly select one patch the participant can travel to&amp;#10;if ((curr_blk === 1)) {&amp;#10;    //forced_isld_num = Math.ceil(Math.random() * 3)&amp;#10;    shuffle(alt_islds)&amp;#10;    forced_isld_num = alt_islds[0];&amp;#10;    keys_allowed = [];&amp;#10;    cross_opacity=1;&amp;#10;    if ((forced_isld_num === 1)) {&amp;#10;        keys_allowed = &quot;f&quot;;&amp;#10;        box_pos = [(- 0.3), (- 0.35)];&amp;#10;        cross1_pos =[0, 0.15];&amp;#10;        cross2_pos = [0.3, (- 0.35)];&amp;#10;    }&amp;#10;    if ((forced_isld_num === 2)) {&amp;#10;        keys_allowed = &quot;j&quot;;&amp;#10;        box_pos = [0, 0.15];&amp;#10;        cross1_pos = [(- 0.3), (- 0.35)];&amp;#10;        cross2_pos = [0.3, (- 0.35)];&amp;#10;    }&amp;#10;    if ((forced_isld_num === 3)) {&amp;#10;        keys_allowed = &quot;k&quot;;&amp;#10;        box_pos = [0.3, (- 0.35)];&amp;#10;        cross1_pos = [(- 0.3), (- 0.35)];&amp;#10;        cross2_pos = [0, 0.15];&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;// if block type is free allow both alternative keys to be pressed&amp;#10;if ((curr_blk === 2)) {&amp;#10;    box_pos = [0, 0];&amp;#10;    box_col = ocean_col;&amp;#10;    keys_allowed = ['f', 'j', 'k'];&amp;#10;    cross1_pos=[0,0];&amp;#10;    cross2_pos=[0,0];&amp;#10;    cross_opacity=0;&amp;#10;    &amp;#10;    // set alt islands&amp;#10;    if ((curr_isld !==10)) {&amp;#10;        &amp;#10;        if ((curr_isld === 1)) {&amp;#10;            keys_allowed=['j','k'];&amp;#10;        }&amp;#10;    &amp;#10;        if ((curr_isld === 2)) {&amp;#10;            keys_allowed=['f','k'];&amp;#10;        }&amp;#10;    &amp;#10;        if ((curr_isld === 3)) {&amp;#10;            keys_allowed=['f','j'];&amp;#10;            }&amp;#10;        }&amp;#10;}&amp;#10;&amp;#10;// set remaining actions to display to participant&amp;#10;actions_remaining=total_actions_allowed-actions_blk;&amp;#10;actions_remaining_msg='Actions left in block: ' + actions_remaining.toString();" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# start block timer&amp;#10;if start_blk_timer==1:&amp;#10;    blk_timer=core.Clock()&amp;#10;    start_blk_timer=0&amp;#10;    &amp;#10;# set block type as free or forced choice&amp;#10;if blk_timer.getTime()&gt;blk_duration:&amp;#10;    blk_idx=blk_idx+1&amp;#10;    curr_blk=blk_order[blk_idx]&amp;#10;    &amp;#10;# if block type is forced&amp;#10;# choose a random patch and only allow that key to be pressed&amp;#10;if curr_blk==1:&amp;#10;    import random&amp;#10;    forced_isld_num=random.randint(1,4)&amp;#10;    &amp;#10;    keys_allowed=[];&amp;#10;    if forced_isld_num==1:&amp;#10;        keys_allowed='f'&amp;#10;        box_pos=[-0.3,-0.35]&amp;#10;    if forced_isld_num==2:&amp;#10;        keys_allowed='j'&amp;#10;        box_pos=[0,0.15]&amp;#10;    if forced_isld_num==3:&amp;#10;        keys_allowed='k'&amp;#10;        box_pos=[0.3,-0.35]&amp;#10;    box_col=[255,0,0];&amp;#10;    &amp;#10;# if block type is free&amp;#10;# allow all keys to be pressed&amp;#10;if curr_blk==2:&amp;#10;    box_pos=[0,0]&amp;#10;    box_col=ocean_col&amp;#10;    keys_allowed=['f','j','k']&amp;#10;    &amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((terminate_expt===1)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }&amp;#10;&amp;#10;// if a valid key is pressed, end this part of the trial&amp;#10;valid_keypress=keys_allowed.includes(sel_resp.keys);&amp;#10;if ((valid_keypress===true)) {&amp;#10;    continueRoutine=false;&amp;#10;    }&amp;#10;&amp;#10;// if the total actions allowed in the block have been taken, end the block&amp;#10;if ((actions_remaining===0)) {&amp;#10;    curr_pos = [0, 0];&amp;#10;    ship_pos = [0, 0];&amp;#10;    curr_isld = 10;&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="// set reward position based on island selected&amp;#10;rew_pos = [];&amp;#10;if ((sel_resp.keys === &quot;f&quot;)) {&amp;#10;    rew_pos = [(- 0.3), (- 0.25)];&amp;#10;    treasure_pos=[(- 0.265), (- 0.25)];&amp;#10;    curr_isld = 1; // index into isld_rvals&amp;#10;}&amp;#10;if ((sel_resp.keys === &quot;j&quot;)) {&amp;#10;    rew_pos = [0, 0.25];&amp;#10;    treasure_pos=[0.035, 0.25];&amp;#10;    curr_isld = 2;&amp;#10;}&amp;#10;if ((sel_resp.keys === &quot;k&quot;)) {&amp;#10;    rew_pos = [0.3, (- 0.25)];&amp;#10;    treasure_pos = [0.335, (- 0.25)];&amp;#10;    curr_isld = 3;&amp;#10;}&amp;#10;&amp;#10;// store a backup copy&amp;#10;treasure_pos_orig=[];&amp;#10;treasure_pos_orig=[...treasure_pos];&amp;#10;&amp;#10;// set local action counter for upcoming island&amp;#10;exploit_actions = 0;&amp;#10;&amp;#10;// update action counters&amp;#10;actions_blk=(actions_blk + 1);&amp;#10;total_actions=(total_actions + 1);&amp;#10;actions_remaining=total_actions_allowed-actions_blk;&amp;#10;&amp;#10;// save data&amp;#10;psychoJS.experiment.addData('blk_number', curr_blk_number);&amp;#10;psychoJS.experiment.addData('blk_type', curr_blk); // 1 for forced choice, 2 for free choice&amp;#10;psychoJS.experiment.addData('mean reward block', Math.floor(mean_reward_blk)); &amp;#10;psychoJS.experiment.addData('current patch position', curr_isld); // 1=left, 2=top, 3=right&amp;#10;psychoJS.experiment.addData('patch value left', Math.floor(isld_rvals[0])); &amp;#10;psychoJS.experiment.addData('patch value top', Math.floor(isld_rvals[1])); &amp;#10;psychoJS.experiment.addData('patch value right', Math.floor(isld_rvals[2])); &amp;#10;psychoJS.experiment.addData('patch replenish left', isld_replen_rates[0]); &amp;#10;psychoJS.experiment.addData('patch replenish top', isld_replen_rates[1]); &amp;#10;psychoJS.experiment.addData('patch replenish right', isld_replen_rates[2]); &amp;#10;psychoJS.experiment.addData('current patch replenish rate', isld_replen_rates[curr_isld-1]); // 1=slow, 2=medium, 3=fast&amp;#10;psychoJS.experiment.addData('patch value slow', Math.floor(isld_rvals[slow_idx])); &amp;#10;psychoJS.experiment.addData('patch value medium', Math.floor(isld_rvals[medium_idx])); &amp;#10;psychoJS.experiment.addData('patch value fast', Math.floor(isld_rvals[fast_idx])); &amp;#10;psychoJS.experiment.addData('patch replenish slow', isld_replen_rates[slow_idx]); &amp;#10;psychoJS.experiment.addData('patch replenish medium', isld_replen_rates[medium_idx]); &amp;#10;psychoJS.experiment.addData('patch replenish fast', isld_replen_rates[fast_idx]); &amp;#10;psychoJS.experiment.addData('decision type', 1); // Use 1 for select, 2 for stay, 3 for leave&amp;#10;psychoJS.experiment.addData('trial phase', 1); // 1 for select, 2 for travel, 3 for exploit/stay decision, 4 for exploit feedback&amp;#10;&amp;#10;// selection variables&amp;#10;psychoJS.experiment.addData('patch_selection_key', sel_resp.keys);&amp;#10;psychoJS.experiment.addData('patch_selection_RT', sel_resp.rt);&amp;#10;&amp;#10;// exploit loop variables&amp;#10;psychoJS.experiment.addData('actual_rew_gain', 0);&amp;#10;psychoJS.experiment.addData('rew_fbk_displayed', 0);&amp;#10;psychoJS.experiment.addData('blk_points', Math.floor(points_blk));&amp;#10;psychoJS.experiment.addData('blk_actions', actions_blk);&amp;#10;psychoJS.experiment.addData('exploit_phase_key', 'N/A');&amp;#10;psychoJS.experiment.addData('exploit_phase_RT', 0);&amp;#10;psychoJS.experiment.addData('num_exploit_actions', 0);&amp;#10;&amp;#10;&amp;#10;// broader variables&amp;#10;psychoJS.experiment.addData('mean reward entire experiment', Math.floor(mean_reward_entire_experiment));&amp;#10;psychoJS.experiment.addData('total_points', Math.floor(total_points));&amp;#10;psychoJS.experiment.addData('total_actions', total_actions);&amp;#10;psychoJS.experiment.addData('actions_remaining', actions_remaining);&amp;#10;psychoJS.experiment.addData('time in patch (seconds)', 0);&amp;#10;psychoJS.experiment.nextEntry()&amp;#10;&amp;#10;// update patch values following selection&amp;#10;    isld_rvals[0] = (isld_rvals[0] + isld_replen_rates[0]*(100-isld_rvals[0]));&amp;#10;    isld_rvals[1] = (isld_rvals[1] + isld_replen_rates[1]*(100-isld_rvals[1]));&amp;#10;    isld_rvals[2] = (isld_rvals[2] + isld_replen_rates[2]*(100-isld_rvals[2]));&amp;#10;&amp;#10;    // if the values exceed the maximum value, set them to the maximum&amp;#10;    if ((isld_rvals[0] &gt; isld_svals[0])) {&amp;#10;        isld_rvals[0] = isld_svals[0];&amp;#10;    }&amp;#10;    if ((isld_rvals[1] &gt; isld_svals[1])) {&amp;#10;        isld_rvals[1] = isld_svals[1];&amp;#10;    }&amp;#10;    if ((isld_rvals[2] &gt; isld_svals[2])) {&amp;#10;        isld_rvals[2] = isld_svals[2];&amp;#10;    }&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# establish reward position&amp;#10;# based on island selected&amp;#10;rew_pos=[];&amp;#10;if sel_resp.keys=='f':&amp;#10;    rew_pos=[-0.3, -0.4]&amp;#10;    curr_isld=1 # index into isld_rvals&amp;#10;if sel_resp.keys=='j':&amp;#10;    rew_pos=[0, 0.2]&amp;#10;    curr_isld=2&amp;#10;if sel_resp.keys=='k':&amp;#10;    rew_pos=[0.3, -0.4]&amp;#10;    curr_isld=3&amp;#10;    &amp;#10;# set action counter for upcoming island&amp;#10;exploit_actions=0;&amp;#10;&amp;#10;# set conditional to start patch timer&amp;#10;start_patch_timer=1;&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_select" valType="code"/>
      </CodeComponent>
      <PolygonComponent name="ocean_select">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$ocean_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$ocean_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="ocean_select" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$ocean_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="set every repeat" val="$ocean_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld1_select">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="30" valType="int"/>
        <Param name="name" updates="None" val="isld1_select" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld1_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld2_select">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="30" valType="int"/>
        <Param name="name" updates="None" val="isld2_select" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld2_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld3_select">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="30" valType="int"/>
        <Param name="name" updates="None" val="isld3_select" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld3_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <TextComponent name="Select_txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="Select_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="center_txt_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Select an island!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <PolygonComponent name="forced_choice_box">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$box_line_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="5" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="forced_choice_box" valType="code"/>
        <Param name="opacity" updates="set every repeat" val="$box_opacity" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$box_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="set every repeat" val="$box_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <TextComponent name="Select_F">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="Select_F" valType="code"/>
        <Param name="opacity" updates="set every repeat" val="$f_key_opacity" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$f_keypos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$f_key_txt&amp;#10;&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Select_J">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="Select_J" valType="code"/>
        <Param name="opacity" updates="set every repeat" val="$j_key_opacity" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$j_keypos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$j_key_txt" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Select_K">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="Select_K" valType="code"/>
        <Param name="opacity" updates="set every repeat" val="$k_key_opacity" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$k_keypos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$k_key_txt" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Select_Cross1">
        <Param name="color" updates="constant" val="red" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="$cross_size" valType="code"/>
        <Param name="name" updates="None" val="Select_Cross1" valType="code"/>
        <Param name="opacity" updates="set every repeat" val="$cross_opacity" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$cross1_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="X" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Select_Cross2">
        <Param name="color" updates="constant" val="red" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="$cross_size" valType="code"/>
        <Param name="name" updates="None" val="Select_Cross2" valType="code"/>
        <Param name="opacity" updates="set every repeat" val="$cross_opacity" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$cross2_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="X" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="agent_img">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="stimuli/pirate_ship.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="agent_img" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$ship_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="$agent_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="Select_act_count">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="$action_msg_size" valType="code"/>
        <Param name="name" updates="None" val="Select_act_count" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$action_msg_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$actions_remaining_msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="sel_resp">
        <Param name="allowedKeys" updates="constant" val="['f','j','k']" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="sel_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="travel">
      <CodeComponent name="code_select_2">
        <Param name="Begin Experiment" updates="constant" val="# define pirate ship stimulus&amp;#10;agent='stimuli/pirate_ship.png'&amp;#10;&amp;#10;# define agent size&amp;#10;agent_size=(0.1, 0.1)&amp;#10;&amp;#10;# initialise starting position &amp;#10;curr_pos=[0,0]&amp;#10;ship_pos=[0,0]&amp;#10;&amp;#10;# set travel duration&amp;#10;# constant in this case, as&amp;#10;# islands are equi-dtistant&amp;#10;travel_duration=0.5" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="// set the goal position depending on button press&amp;#10;if ((sel_resp.keys === &quot;f&quot;)) {&amp;#10;    goal_pos=[0,0];&amp;#10;    goal_pos[0]=isld1_pos[0]+0.1;&amp;#10;    goal_pos[1]=isld1_pos[1]+0.1;&amp;#10;    direction = &quot;left&quot;;&amp;#10;}&amp;#10;if ((sel_resp.keys === &quot;j&quot;)) {&amp;#10;    goal_pos=[0,0];&amp;#10;    goal_pos[0]=isld2_pos[0];&amp;#10;    goal_pos[1]=isld2_pos[1]-0.1;&amp;#10;    direction = &quot;up&quot;;&amp;#10;}&amp;#10;if ((sel_resp.keys === &quot;k&quot;)) {&amp;#10;    goal_pos=[0,0];&amp;#10;    goal_pos[0]=isld3_pos[0]-0.1;&amp;#10;    goal_pos[1]=isld3_pos[1]+0.1;&amp;#10;    direction = &quot;right&quot;;&amp;#10;}&amp;#10;&amp;#10;// set current pos to ship pos&amp;#10;curr_pos = ship_pos;&amp;#10;&amp;#10;// set remaining actions to display to participant&amp;#10;actions_remaining=total_actions_allowed-actions_blk;&amp;#10;&amp;#10;if ((actions_remaining&lt;0)) {&amp;#10;    actions_remaining=0;&amp;#10;    }&amp;#10;&amp;#10;actions_remaining_msg='Actions left in block: ' + actions_remaining.toString();&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# work out distance between curr position and goal location&amp;#10;if sel_resp.keys=='f':&amp;#10;    goal_pos[0]=isld1_pos[0]+0.2;&amp;#10;    goal_pos[1]=isld1_pos[1]+0.2;&amp;#10;    direction='left'&amp;#10;if sel_resp.keys=='j':&amp;#10;    goal_pos[0]=isld2_pos[0];&amp;#10;    goal_pos[1]=isld2_pos[1]-1;&amp;#10;    console.log(goal_pos)&amp;#10;    direction='up'&amp;#10;if sel_resp.keys=='k':&amp;#10;    goal_pos[0]=isld3_pos[0]-0.2;&amp;#10;    goal_pos[1]=isld3_pos[1]+0.2;&amp;#10;    direction='right'&amp;#10;    &amp;#10;# start timer&amp;#10;travel_timer=core.Clock()&amp;#10;t=0&amp;#10;&amp;#10;# set current pos to ship pos&amp;#10;curr_pos=ship_pos" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="#if travel_timer.getTime()&gt;(1/travel_duration):&amp;#10;t=t-(1/100000000000000000000000000000000000000000000000000000)&amp;#10;&amp;#10;# need a way that ship ends up in same place&amp;#10;&amp;#10;if direction=='left':&amp;#10;    if (ship_pos[0]&gt;goal_pos[0]):&amp;#10;        ship_pos[0]=curr_pos[0]-t&amp;#10;    if (ship_pos[1]&gt;goal_pos[1]):&amp;#10;        ship_pos[1]=curr_pos[1]-t&amp;#10;&amp;#10;if direction=='up':&amp;#10;    if ship_pos[0]&gt;goal_pos[0]:&amp;#10;        ship_pos[0]=curr_pos[0]-t&amp;#10;    if ship_pos[0]&lt;goal_pos[0]:&amp;#10;        ship_pos[0]=curr_pos[0]+t&amp;#10;    if ship_pos[1]&lt;goal_pos[1]:&amp;#10;        ship_pos[1]=curr_pos[1]+t&amp;#10;        &amp;#10;if direction=='right':&amp;#10;    if ship_pos[0]&lt;goal_pos[0]:&amp;#10;        ship_pos[0]=curr_pos[0]+t&amp;#10;    if ship_pos[1]&gt;goal_pos[1]:&amp;#10;        ship_pos[1]=curr_pos[1]-t&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((terminate_expt===1)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }&amp;#10;&amp;#10;// if the total actions allowed in the block have been taken, end the block&amp;#10;if ((actions_remaining===0)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="// update the position of the agent&amp;#10;ship_pos[0]=goal_pos[0];&amp;#10;ship_pos[1]=goal_pos[1];&amp;#10;&amp;#10;// save data&amp;#10;psychoJS.experiment.addData('blk_number', curr_blk_number);&amp;#10;psychoJS.experiment.addData('blk_type', curr_blk); // 1 for forced choice, 2 for free choice&amp;#10;psychoJS.experiment.addData('mean reward block', Math.floor(mean_reward_blk)); &amp;#10;psychoJS.experiment.addData('current patch position', curr_isld); // 1=left, 2=top, 3=right&amp;#10;psychoJS.experiment.addData('patch value left', Math.floor(isld_rvals[0])); &amp;#10;psychoJS.experiment.addData('patch value top', Math.floor(isld_rvals[1])); &amp;#10;psychoJS.experiment.addData('patch value right', Math.floor(isld_rvals[2])); &amp;#10;psychoJS.experiment.addData('patch replenish left', isld_replen_rates[0]); &amp;#10;psychoJS.experiment.addData('patch replenish top', isld_replen_rates[1]); &amp;#10;psychoJS.experiment.addData('patch replenish right', isld_replen_rates[2]); &amp;#10;psychoJS.experiment.addData('current patch replenish rate', isld_replen_rates[curr_isld-1]); // 1=slow, 2=medium, 3=fast&amp;#10;psychoJS.experiment.addData('patch value slow', Math.floor(isld_rvals[slow_idx])); &amp;#10;psychoJS.experiment.addData('patch value medium', Math.floor(isld_rvals[medium_idx])); &amp;#10;psychoJS.experiment.addData('patch value fast', Math.floor(isld_rvals[fast_idx])); &amp;#10;psychoJS.experiment.addData('patch replenish slow', isld_replen_rates[slow_idx]); &amp;#10;psychoJS.experiment.addData('patch replenish medium', isld_replen_rates[medium_idx]); &amp;#10;psychoJS.experiment.addData('patch replenish fast', isld_replen_rates[fast_idx]); &amp;#10;psychoJS.experiment.addData('decision type', 0); // Use 1 for select, 2 for stay, 3 for leave&amp;#10;psychoJS.experiment.addData('trial phase', 2); // 1 for select, 2 for travel, 3 for exploit/stay decision, 4 for exploit feedback&amp;#10;&amp;#10;// selection variables&amp;#10;psychoJS.experiment.addData('patch_selection_key', 0);&amp;#10;psychoJS.experiment.addData('patch_selection_RT', 0);&amp;#10;&amp;#10;// exploit loop variables&amp;#10;psychoJS.experiment.addData('actual_rew_gain', 0);&amp;#10;psychoJS.experiment.addData('rew_fbk_displayed', 0);&amp;#10;psychoJS.experiment.addData('blk_points', Math.floor(points_blk));&amp;#10;psychoJS.experiment.addData('blk_actions', actions_blk);&amp;#10;psychoJS.experiment.addData('exploit_phase_key', 'N/A');&amp;#10;psychoJS.experiment.addData('exploit_phase_RT', 0);&amp;#10;psychoJS.experiment.addData('num_exploit_actions', 0);&amp;#10;&amp;#10;// broader variables&amp;#10;psychoJS.experiment.addData('mean reward entire experiment', Math.floor(mean_reward_entire_experiment));&amp;#10;psychoJS.experiment.addData('total_points', Math.floor(total_points));&amp;#10;psychoJS.experiment.addData('total_actions', total_actions);&amp;#10;psychoJS.experiment.addData('actions_remaining', actions_remaining);&amp;#10;psychoJS.experiment.addData('time in patch (seconds)', 0);&amp;#10;psychoJS.experiment.nextEntry()&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_select_2" valType="code"/>
      </CodeComponent>
      <PolygonComponent name="ocean_select_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$ocean_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$ocean_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="ocean_select_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$ocean_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="set every repeat" val="$ocean_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$travel_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld1_select_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="30" valType="int"/>
        <Param name="name" updates="None" val="isld1_select_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld1_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$travel_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld2_select_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="30" valType="int"/>
        <Param name="name" updates="None" val="isld2_select_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld2_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$travel_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld3_select_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="30" valType="int"/>
        <Param name="name" updates="None" val="isld3_select_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld3_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$travel_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <ImageComponent name="agent_select">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="stimuli/pirate_ship.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="agent_select" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$ship_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="$agent_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$travel_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="center_txt_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$travel_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="$travel_msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="travel_action_count">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="$action_msg_size" valType="code"/>
        <Param name="name" updates="None" val="travel_action_count" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$action_msg_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$travel_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$actions_remaining_msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="exploit_fbk">
      <CodeComponent name="code_exploit_2">
        <Param name="Begin Experiment" updates="constant" val="# define variables used during this phase&amp;#10;opacity_val=0&amp;#10;rewval=0&amp;#10;rew_displayed=0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="// set remaining actions to display to participant&amp;#10;actions_remaining=total_actions_allowed-actions_blk;&amp;#10;&amp;#10;if ((actions_remaining&lt;0)) {&amp;#10;    actions_remaining=0;&amp;#10;    }&amp;#10;&amp;#10;actions_remaining_msg='Actions left in block: ' + actions_remaining.toString();&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# start patch timer&amp;#10;if start_patch_timer:&amp;#10;    patch_timer=core.Clock()&amp;#10;    start_patch_timer=0&amp;#10;&amp;#10;# start timer for feedback&amp;#10;timer = core.Clock()&amp;#10;&amp;#10;# update action counter&amp;#10;exploit_actions=exploit_actions+1;&amp;#10;&amp;#10;# allow rew_disp to be set&amp;#10;set_rew_disp=1&amp;#10;&amp;#10;# replenish alternative patches&amp;#10;# and store value during decision phase&amp;#10;&amp;#10;# 1. find alternative patches&amp;#10;alt_islds=list(set([1,2,3])-set([curr_isld]))&amp;#10;&amp;#10;# 2. replenish based on pre-set constant&amp;#10;isld_rvals[alt_islds[0]-1] = isld_rvals[alt_islds[0]-1] + isld_replen_rates[alt_islds[0]-1]**patch_timer.getTime()&amp;#10;isld_rvals[alt_islds[1]-1] = isld_rvals[alt_islds[1]-1] + isld_replen_rates[alt_islds[1]-1]**patch_timer.getTime()&amp;#10;&amp;#10;# 3. cap at the maximum value&amp;#10;if isld_rvals[alt_islds[0]-1]&gt;isld_svals[alt_islds[0]-1]:&amp;#10;    isld_rvals[alt_islds[0]-1]=isld_svals[alt_islds[0]-1]&amp;#10;&amp;#10;if isld_rvals[alt_islds[1]-1]&gt;isld_svals[alt_islds[1]-1]:&amp;#10;    isld_rvals[alt_islds[1]-1]=isld_svals[alt_islds[1]-1]&amp;#10;&amp;#10;# 4. save patch values&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# give reward feedback for 1 second&amp;#10;# after an exploit action, &amp;#10;# else make the text transparent&amp;#10;if timer.getTime()&lt;=1:&amp;#10;    opacity_val=1&amp;#10;    if set_rew_disp==1:&amp;#10;        # calculate reward based on exponential decay&amp;#10;        base=isld_svals[curr_isld-1]&amp;#10;        power=0.5*-patch_timer.getTime()&amp;#10;        isld_rvals[curr_isld-1]=pow(base,power)&amp;#10;        rew_displayed=isld_rvals[curr_isld-1]&amp;#10;        set_rew_disp=0&amp;#10;else:&amp;#10;    opacity_val=0&amp;#10;    " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((terminate_expt===1)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }&amp;#10;&amp;#10;// if s is pressed, end the routine&amp;#10;if ((exploit_resp.keys === &quot;s&quot;)) {&amp;#10;    continueRoutine=false;&amp;#10;    }&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="// update the value of the alternative patches after each action  &amp;#10;    all_islds=[1,2,3];&amp;#10;    cmp_isld= curr_isld + &quot;&quot;&amp;#10;    alt_islds = all_islds.filter(x =&gt; cmp_isld.indexOf(x) === -1);&amp;#10;    isld_rvals[(alt_islds[0] - 1)] = (isld_rvals[(alt_islds[0] - 1)] + isld_replen_rates[(alt_islds[0] - 1)]*(100-isld_rvals[(alt_islds[0] - 1)]));&amp;#10;    isld_rvals[(alt_islds[1] - 1)] = (isld_rvals[(alt_islds[1] - 1)] + isld_replen_rates[(alt_islds[1] - 1)]*(100-isld_rvals[(alt_islds[1] - 1)]));&amp;#10;    &amp;#10;    // if the values exceed the maximum value, set them to the maximum&amp;#10;    if ((isld_rvals[(alt_islds[0] - 1)] &gt; isld_svals[(alt_islds[0] - 1)])) {&amp;#10;        isld_rvals[(alt_islds[0] - 1)] = isld_svals[(alt_islds[0] - 1)];&amp;#10;    }&amp;#10;    if ((isld_rvals[(alt_islds[1] - 1)] &gt; isld_svals[(alt_islds[1] - 1)])) {&amp;#10;        isld_rvals[(alt_islds[1] - 1)] = isld_svals[(alt_islds[1] - 1)];&amp;#10;    }&amp;#10;&amp;#10;// update current island once at end to account for replenish during leaving decision (optional)&amp;#10;if ((exploit_resp.keys === &quot;s&quot;)) {&amp;#10;    isld_rvals[(curr_isld-1)] = (isld_rvals[(curr_isld-1)] + isld_replen_rates[(curr_isld-1)]*(100-isld_rvals[(curr_isld-1)]));&amp;#10;    &amp;#10;    if ((isld_rvals[(curr_isld - 1)] &gt; isld_svals[(curr_isld - 1)])) {&amp;#10;        isld_rvals[(curr_isld - 1)] = isld_svals[(curr_isld - 1)];&amp;#10;    }&amp;#10;&amp;#10;// if leaving patch, end timer&amp;#10;    endTime = Date.now();&amp;#10;    patchTime = (endTime-startTime) / 1000; // patchTime in seconds if using Date.now()&amp;#10;}&amp;#10;&amp;#10;&amp;#10;// save data&amp;#10;psychoJS.experiment.addData('blk_number', curr_blk_number);&amp;#10;psychoJS.experiment.addData('blk_type', curr_blk); // 1 for forced choice, 2 for free choice&amp;#10;psychoJS.experiment.addData('mean reward block', Math.floor(mean_reward_blk)); &amp;#10;psychoJS.experiment.addData('current patch position', curr_isld); // 1=left, 2=top, 3=right&amp;#10;psychoJS.experiment.addData('patch value left', Math.floor(isld_rvals[0])); &amp;#10;psychoJS.experiment.addData('patch value top', Math.floor(isld_rvals[1])); &amp;#10;psychoJS.experiment.addData('patch value right', Math.floor(isld_rvals[2])); &amp;#10;psychoJS.experiment.addData('patch replenish left', isld_replen_rates[0]); &amp;#10;psychoJS.experiment.addData('patch replenish top', isld_replen_rates[1]); &amp;#10;psychoJS.experiment.addData('patch replenish right', isld_replen_rates[2]); &amp;#10;psychoJS.experiment.addData('current patch replenish rate', isld_replen_rates[curr_isld-1]); // 1=slow, 2=medium, 3=fast&amp;#10;psychoJS.experiment.addData('patch value slow', Math.floor(isld_rvals[slow_idx])); &amp;#10;psychoJS.experiment.addData('patch value medium', Math.floor(isld_rvals[medium_idx])); &amp;#10;psychoJS.experiment.addData('patch value fast', Math.floor(isld_rvals[fast_idx])); &amp;#10;psychoJS.experiment.addData('patch replenish slow', isld_replen_rates[slow_idx]); &amp;#10;psychoJS.experiment.addData('patch replenish medium', isld_replen_rates[medium_idx]); &amp;#10;psychoJS.experiment.addData('patch replenish fast', isld_replen_rates[fast_idx]); &amp;#10;psychoJS.experiment.addData('decision type', 0); // Use 1 for select, 2 for stay, 3 for leave&amp;#10;psychoJS.experiment.addData('trial phase', 4); // 1 for select, 2 for travel, 3 for exploit/stay decision, 4 for exploit feedback&amp;#10;&amp;#10;// selection variables&amp;#10;psychoJS.experiment.addData('patch_selection_key', 0);&amp;#10;psychoJS.experiment.addData('patch_selection_RT', 0);&amp;#10;&amp;#10;// exploit loop variables&amp;#10;psychoJS.experiment.addData('actual_rew_gain', Math.floor(isld_rvals[(curr_isld - 1)]));&amp;#10;psychoJS.experiment.addData('rew_fbk_displayed', rew_displayed);&amp;#10;psychoJS.experiment.addData('blk_points', Math.floor(points_blk));&amp;#10;psychoJS.experiment.addData('blk_actions', actions_blk);&amp;#10;psychoJS.experiment.addData('exploit_phase_key', 0);&amp;#10;psychoJS.experiment.addData('exploit_phase_RT', 0);&amp;#10;psychoJS.experiment.addData('num_exploit_actions', 0);&amp;#10;&amp;#10;// broader variables&amp;#10;psychoJS.experiment.addData('mean reward entire experiment', Math.floor(mean_reward_entire_experiment));&amp;#10;psychoJS.experiment.addData('total_points', Math.floor(total_points));&amp;#10;psychoJS.experiment.addData('total_actions', total_actions);&amp;#10;psychoJS.experiment.addData('actions_remaining', actions_remaining);&amp;#10;psychoJS.experiment.addData('time in patch (seconds)', patchTime);&amp;#10;psychoJS.experiment.nextEntry()&amp;#10;&amp;#10;// if the total actions allowed in the block have been taken, end the block&amp;#10;if ((actions_remaining===0)) {&amp;#10;    curr_pos = [0, 0];&amp;#10;    ship_pos = [0, 0];&amp;#10;    curr_isld = 10;&amp;#10;    continueRoutine=false;&amp;#10;    exploit_loop.finished=true;&amp;#10;    trials.finished=true;&amp;#10;    }" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# save patch values when the exploit decision is made&amp;#10;# then return to the selection phase&amp;#10;if exploit_resp.keys=='s':&amp;#10;        # current patch&amp;#10;        base=isld_svals[curr_isld-1]&amp;#10;        power=0.5*-patch_timer.getTime()&amp;#10;        isld_rvals[curr_isld-1]=pow(base,power)&amp;#10;        &amp;#10;        # alternative patches&amp;#10;        # 1. find alternative patches&amp;#10;        alt_islds=list(set([1,2,3])-set([curr_isld]))&amp;#10;&amp;#10;        # 2. replenish based on pre-set constant&amp;#10;        isld_rvals[alt_islds[0]-1] = isld_rvals[alt_islds[0]-1] + isld_replen_rates[alt_islds[0]-1]**patch_timer.getTime()&amp;#10;        isld_rvals[alt_islds[1]-1] = isld_rvals[alt_islds[1]-1] + isld_replen_rates[alt_islds[1]-1]**patch_timer.getTime()&amp;#10;&amp;#10;        # 3. cap at the maximum value&amp;#10;        if isld_rvals[alt_islds[0]-1]&gt;isld_svals[alt_islds[0]-1]:&amp;#10;            isld_rvals[alt_islds[0]-1]=isld_svals[alt_islds[0]-1]&amp;#10;&amp;#10;        if isld_rvals[alt_islds[1]-1]&gt;isld_svals[alt_islds[1]-1]:&amp;#10;            isld_rvals[alt_islds[1]-1]=isld_svals[alt_islds[1]-1]&amp;#10;&amp;#10;        # break loop&amp;#10;        exploit_loop.finished=True&amp;#10;&amp;#10;        " valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_exploit_2" valType="code"/>
      </CodeComponent>
      <PolygonComponent name="ocean_exploit_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$ocean_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$ocean_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="ocean_exploit_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="set every repeat" val="$ocean_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fbk_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld1_exploit_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="25" valType="int"/>
        <Param name="name" updates="None" val="isld1_exploit_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld1_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fbk_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld2_exploit_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="25" valType="int"/>
        <Param name="name" updates="None" val="isld2_exploit_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld2_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fbk_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="isld3_exploit_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$isld_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="25" valType="int"/>
        <Param name="name" updates="None" val="isld3_exploit_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$isld3_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$isld_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fbk_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <ImageComponent name="agent_exploit_2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="$agent" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="agent_exploit_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$ship_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="$agent_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fbk_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="points_txt_2">
        <Param name="color" updates="set every repeat" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="points_txt_2" valType="code"/>
        <Param name="opacity" updates="set every repeat" val="$fbk_opacity" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$rew_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fbk_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$rew_displayed_msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="exploit_fbk_dig_sail_txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="exploit_fbk_dig_sail_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="[0,0]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fbk_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press space to dig for treasure and s to set sail" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="exploit_fbk_action_count">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="$action_msg_size" valType="code"/>
        <Param name="name" updates="None" val="exploit_fbk_action_count" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$action_msg_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fbk_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$actions_remaining_msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="treasure">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$bounty" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="treasure" valType="code"/>
        <Param name="opacity" updates="set every repeat" val="$fbk_opacity" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$treasure_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="$treasure_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$fbk_duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="block_instructions"/>
    <Routine name="blk_instruc">
      <CodeComponent name="blk_instruc_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="// define shuffle function&amp;#10;window.shuffle = function(a) {&amp;#10;    var j, x, i;&amp;#10;    for (i = a.length - 1; i &gt; 0; i--) {&amp;#10;        j = Math.floor(Math.random() * (i + 1));&amp;#10;        x = a[i];&amp;#10;        a[i] = a[j];&amp;#10;        a[j] = x;&amp;#10;    }&amp;#10;    return a;&amp;#10;}&amp;#10;&amp;#10;// define block information&amp;#10;blk_order = [1, 1, 2, 2];&amp;#10;shuffle(blk_order);&amp;#10;blk_idx = -1; // updated when routine begins&amp;#10;curr_blk_number = 0; // used for end of block message. Will update to one when starting block_instruc&amp;#10;total_blk_number = 4; &amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="blk_idx=blk_idx+1;&amp;#10;curr_blk = blk_order[blk_idx];&amp;#10;curr_blk_number=curr_blk_number+1;&amp;#10;fbk_opacity=1; // restore fbk opacity for block in case it was changed&amp;#10;&amp;#10;if ((curr_blk===1)) {&amp;#10;    blk_instruc_txt='The seas are stormy!\n\nIn this block, storms will mean you can only navigate to a specific island when setting sail from your current island.\n\nLike any swashbuckling pirate with a thirst for riches, try to earn as many gold medallions as you can during the block, as this will increase your bonus payment!\n\n\n\nPress enter to begin'&amp;#10;}&amp;#10;&amp;#10;if ((curr_blk===2)) {&amp;#10;    blk_instruc_txt='The seas are calm.\n\nIn this block, calm seas will allow you to navigate to any island when setting sail from your current island.\n\nLike any swashbuckling pirate with a thirst for riches, try to earn as many gold medallions as you can during the block as this will increase your bonus payment!\n\n\n\nPress enter to begin'&amp;#10;}&amp;#10;&amp;#10;// Shuffle the replenish rates assigned to each patch at the start of the block&amp;#10;shuffle(isld_replen_rates)&amp;#10;&amp;#10;// figure out assignment index for slow patch&amp;#10;if ((isld_replen_rates[0]===initial_replen_rates[0])) {&amp;#10;    slow_idx=0;&amp;#10;}&amp;#10;if ((isld_replen_rates[0]===initial_replen_rates[1])) {&amp;#10;    slow_idx=1;&amp;#10;}&amp;#10;if ((isld_replen_rates[0]===initial_replen_rates[2])) {&amp;#10;    slow_idx=2;&amp;#10;}&amp;#10;&amp;#10;// figure out assignment index for medium patch&amp;#10;if ((isld_replen_rates[1]===initial_replen_rates[0])) {&amp;#10;    medium_idx=0;&amp;#10;}&amp;#10;if ((isld_replen_rates[1]===initial_replen_rates[1])) {&amp;#10;    medium_idx=1;&amp;#10;}&amp;#10;if ((isld_replen_rates[1]===initial_replen_rates[2])) {&amp;#10;    medium_idx=2;&amp;#10;}&amp;#10;&amp;#10;// figure out assignment index for fast patch&amp;#10;if ((isld_replen_rates[2]===initial_replen_rates[0])) {&amp;#10;    fast_idx=0;&amp;#10;}&amp;#10;if ((isld_replen_rates[2]===initial_replen_rates[1])) {&amp;#10;    fast_idx=1;&amp;#10;}&amp;#10;if ((isld_replen_rates[2]===initial_replen_rates[2])) {&amp;#10;    fast_idx=2;&amp;#10;}&amp;#10;&amp;#10;console.log(isld_replen_rates)&amp;#10;&amp;#10;// reset object start values and a value vector that can be updated during the block&amp;#10;isld_svals = [100, 100, 100];&amp;#10;//isld_rvals = [100, 100, 100];&amp;#10;&amp;#10;// start patch values at random points around the mean&amp;#10;function getRandomInt(min, max) {&amp;#10;    min = Math.ceil(min);&amp;#10;    max = Math.floor(max);&amp;#10;    return Math.floor(Math.random() * (max - min + 1)) + min;&amp;#10;}&amp;#10;&amp;#10;center_svals=(69+79)/2;&amp;#10;bound=5;&amp;#10;isld_rvals=[];&amp;#10;var i;&amp;#10;for (i = 0; i &lt; 3; i++) {&amp;#10;  isld_rvals[i]=getRandomInt(center_svals-bound,center_svals+bound);&amp;#10;}&amp;#10;&amp;#10;// reset block points&amp;#10;points_blk=0;&amp;#10;mean_reward_blk=0;&amp;#10;&amp;#10;psychoJS.experiment.addData('starting values', isld_svals);&amp;#10;psychoJS.experiment.addData('reward vector to manipulate', isld_rvals); // should be initialised at starting values&amp;#10;psychoJS.experiment.addData('decay_rate', k);&amp;#10;psychoJS.experiment.addData('replenish rates', isld_replen_rates);&amp;#10;psychoJS.experiment.addData('travel_duration', travel_duration);&amp;#10;psychoJS.experiment.addData('feedback_duration', fbk_duration);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((terminate_expt===1)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="// reset total actions for the new block&amp;#10;actions_blk=0;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="blk_instruc_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="blk_txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="blk_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$blk_instruc_txt" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="blk_instruc_resp">
        <Param name="allowedKeys" updates="constant" val="'return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="blk_instruc_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="post_blk_msg">
      <CodeComponent name="post_blk_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="blk_msg_points=Math.floor(points_blk);&amp;#10;blk_msg_allpoints=Math.floor(total_points);&amp;#10;&amp;#10;if ((curr_blk_number&lt;total_blk_number)) {&amp;#10;post_blk_msg='Arrr! Well done salty sea dog.\n\n\In this block ye earned ' + blk_msg_points.toString() + ' gold medallions!\n\nYou have now completed ' + curr_blk_number.toString() + ' out of ' + total_blk_number.toString() + ' and have collected ' + blk_msg_allpoints.toString() + ' gold medallions overall. See if you can earn even more medallions in the next block to boost your bonus payment.\n\n\n\nPress space to continue'&amp;#10;}&amp;#10;&amp;#10;if ((curr_blk_number===total_blk_number)) {&amp;#10;post_blk_msg='Arrr! Well done salty sea dog.\n\n\In this block ye earned ' + blk_msg_points.toString() + ' gold medallions!\n\nYou have now completed ' + curr_blk_number.toString() + ' out of ' + total_blk_number.toString() + ' and have collected ' + blk_msg_allpoints.toString() + ' gold medallions overall.\n\n\n\nPress space to continue'&amp;#10;}" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((terminate_expt===1)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="post_blk_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$post_blk_msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="post_blk_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="post_blk_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="demographics">
      <CodeComponent name="demographics_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="// define function to load demographic questions&amp;#10;var instructions = (function () {&amp;#10;    var instructions  = null;&amp;#10;    $.ajax({&amp;#10;        'async': false,&amp;#10;        'global': false,&amp;#10;        'url': &quot;resources/instructions.json&quot;,&amp;#10;        'dataType': &quot;json&quot;,&amp;#10;        'success': function (data) {&amp;#10;            instructions  = data;&amp;#10;        }&amp;#10;    });&amp;#10;    return instructions;&amp;#10;})(); &amp;#10;&amp;#10;// initialise input text&amp;#10;addtext='';&amp;#10;psychoJS.eventManager.clearKeys()&amp;#10;&amp;#10;if ((demographic_msg_counter===0)) {&amp;#10;demographic_question=instructions.demographics.page1&amp;#10;}&amp;#10;&amp;#10;if ((demographic_msg_counter===1)) {&amp;#10;demographic_question=instructions.demographics.page2&amp;#10;}" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((do_demographics===0)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }&amp;#10;&amp;#10;if ((terminate_expt===1)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }&amp;#10;&amp;#10;// display text on screen&amp;#10;numericKeys=['0','1','2','3','4','5','6','7','8','9'];&amp;#10;let theseKeys = psychoJS.eventManager.getKeys({keyList:['1','2','3','4','5','6','7','8','9','0', 'backspace','return']});&amp;#10;&amp;#10;if (theseKeys[0] !== &quot;return&quot;) {&amp;#10;    if (theseKeys[0] === &quot;backspace&quot;) {&amp;#10;        addtext = addtext.substring((addtext.length-1), -1);&amp;#10;    } else if (numericKeys.includes(theseKeys[0])) {&amp;#10;        if (addtext.length &lt; 2) {&amp;#10;        addtext = String(addtext)+String(theseKeys[0]);&amp;#10;        }&amp;#10;    }&amp;#10;} else if (theseKeys[0] === &quot;return&quot;) {        &amp;#10;        if ((demographic_msg_counter===0)) {&amp;#10;            age=addtext&amp;#10;                if (addtext.length === 2) {&amp;#10;                    continueRoutine = false;&amp;#10;                 }&amp;#10;            }&amp;#10;        &amp;#10;        if ((demographic_msg_counter===1)) {&amp;#10;            gender=addtext&amp;#10;                if (addtext.length === 1) {&amp;#10;                    continueRoutine = false;&amp;#10;                 }&amp;#10;            }&amp;#10;      }" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((demographic_msg_counter===0)) {&amp;#10;    psychoJS.experiment.addData('age', (Number(age)));&amp;#10;    }&amp;#10;&amp;#10;if ((demographic_msg_counter===1)) {&amp;#10;    psychoJS.experiment.addData('gender', (Number(gender)));&amp;#10;    }&amp;#10;    &amp;#10;&amp;#10;demographic_msg_counter=demographic_msg_counter+1;&amp;#10;&amp;#10;&amp;#10;// save data&amp;#10;        if (Number(age)&gt;40){&amp;#10;        terminate_expt=1&amp;#10;        final_msg=&quot;Sorry captain, it looks like you are over the age limit for this experiment and cannot continue. Please press space to return to Prolific. Even though you will see the completion code, you will need to return the submission to avoid it being rejected. Thank you for following through.&quot;;&amp;#10;        }&amp;#10;        &amp;#10;        &amp;#10;        &amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="demographics_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="demographics_txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="demographics_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$demographic_question" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demographics_input">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="demographics_input" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.15)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="$addtext" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="demo_resp">
        <Param name="allowedKeys" updates="constant" val="'0','1','2','3','4','5','6','7','8','9','return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="demo_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="welcome">
      <CodeComponent name="task_instruc_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="// define screen counters&amp;#10;intruc_msg_counter=0;&amp;#10;demographic_msg_counter=0;&amp;#10;screening_msg_counter=0;&amp;#10;task_instruc_msg_counter=0;&amp;#10;&amp;#10;// number of slides to present&amp;#10;num_welcome=6;&amp;#10;num_screening_questions=2;&amp;#10;num_demographic_questions=2;&amp;#10;num_instruction_trials=10;&amp;#10;&amp;#10;// run phase?&amp;#10;do_instruc=1;&amp;#10;do_screening=1;&amp;#10;do_demographics=1;&amp;#10;do_task_instruc=1;&amp;#10;&amp;#10;&amp;#10;// initialise variables&amp;#10;screeningQ1=[];&amp;#10;screeningQ2=[];&amp;#10;label_txt='';&amp;#10;age=[];&amp;#10;gender=[];&amp;#10;&amp;#10;// load task instruction images&amp;#10;instruc_imgs=[&quot;stimuli/free_choice1.png&quot;,&quot;stimuli/free_choice2.png&quot;,&quot;stimuli/free_choice3.png&quot;,&quot;stimuli/free_choice4.png&quot;,&quot;stimuli/free_choice5.png&quot;,&quot;stimuli/free_choice6.png&quot;,&quot;stimuli/free_choice6.png&quot;,&quot;stimuli/free_choice6.png&quot;,&quot;stimuli/forced_choice1.png&quot;];&amp;#10;&amp;#10;// task instructions opacity and positioning&amp;#10;    task_instruc_img_opacity=1;&amp;#10;    task_instruc_txt_pos=[0, 0.3];&amp;#10;    task_instruc_space_txt_pos=[0, -0.4]&amp;#10;    &amp;#10;// initialise screening variables&amp;#10;terminate_expt=0;&amp;#10;screeningQ1_passed=0;&amp;#10;screeningQ2_passed=0;&amp;#10;age=0;&amp;#10;&amp;#10;// final message if experiment is finished under normal circumstances&amp;#10;final_msg=['Shiver me timbers! You completed the experiment. Press space to claim your treasure. Feel free to send us a message and let us know how found the task.'];&amp;#10;&amp;#10;// initalise variables for saving&amp;#10;// participant variables&amp;#10;psychoJS.experiment.addData('consent_given', 0);&amp;#10;psychoJS.experiment.addData('screeningQ1', 0);&amp;#10;psychoJS.experiment.addData('screeningQ2', 0);&amp;#10;psychoJS.experiment.addData('age', 0);&amp;#10;psychoJS.experiment.addData('gender', 0);&amp;#10;&amp;#10;// setting variables&amp;#10;psychoJS.experiment.addData('starting values', 0); // should be value defined under begin experiment in select component&amp;#10;psychoJS.experiment.addData('reward vec', 0); // should be value defined under begin experiment in select component&amp;#10;psychoJS.experiment.addData('decay_rate', 0);&amp;#10;psychoJS.experiment.addData('replenish rates', 0);&amp;#10;psychoJS.experiment.addData('travel_duration', 0);&amp;#10;psychoJS.experiment.addData('feedback_duration', 0);&amp;#10;&amp;#10;// key variables to save&amp;#10;psychoJS.experiment.addData('blk_number', 0);&amp;#10;psychoJS.experiment.addData('blk_type', 0); // 1 for forced choice, 2 for free choice&amp;#10;psychoJS.experiment.addData('mean reward block', 0); &amp;#10;psychoJS.experiment.addData('current patch position', 0); // 1=left, 2=top, 3=right&amp;#10;psychoJS.experiment.addData('patch value left', 0); &amp;#10;psychoJS.experiment.addData('patch value top', 0); &amp;#10;psychoJS.experiment.addData('patch value right', 0); &amp;#10;psychoJS.experiment.addData('patch replenish left', 0); &amp;#10;psychoJS.experiment.addData('patch replenish top', 0); &amp;#10;psychoJS.experiment.addData('patch replenish right', 0); &amp;#10;psychoJS.experiment.addData('current patch replenish rate', 0); // 1=slow, 2=medium, 3=fast&amp;#10;psychoJS.experiment.addData('patch value slow', 0); &amp;#10;psychoJS.experiment.addData('patch value medium', 0); &amp;#10;psychoJS.experiment.addData('patch value fast', 0); &amp;#10;psychoJS.experiment.addData('patch replenish slow', 0); &amp;#10;psychoJS.experiment.addData('patch replenish medium', 0); &amp;#10;psychoJS.experiment.addData('patch replenish fast', 0); &amp;#10;psychoJS.experiment.addData('decision type', 0); // initialise. Use 1 for select, 2 for stay, 3 for leave&amp;#10;psychoJS.experiment.addData('trial phase', 0); // 1 for select, 2 for travel, 3 for exploit/stay decision, 4 for exploit feedback&amp;#10;&amp;#10;&amp;#10;// selection variables&amp;#10;psychoJS.experiment.addData('patch_selection_key', 0);&amp;#10;psychoJS.experiment.addData('patch_selection_RT', 0);&amp;#10;&amp;#10;&amp;#10;// exploit loop variables&amp;#10;psychoJS.experiment.addData('actual_rew_gain', 0);&amp;#10;psychoJS.experiment.addData('rew_fbk_displayed', 0);&amp;#10;psychoJS.experiment.addData('blk_points', 0);&amp;#10;psychoJS.experiment.addData('blk_actions', 0);&amp;#10;psychoJS.experiment.addData('exploit_phase_key', 0);&amp;#10;psychoJS.experiment.addData('exploit_phase_RT', 0);&amp;#10;psychoJS.experiment.addData('num_exploit_actions', 0); // just save on leaving to make analysis easier&amp;#10;&amp;#10;// broader variables&amp;#10;psychoJS.experiment.addData('mean reward entire experiment', 0); // initialize&amp;#10;psychoJS.experiment.addData('total_points', total_points);&amp;#10;psychoJS.experiment.addData('total_actions', total_actions);&amp;#10;psychoJS.experiment.addData('actions_remaining', total_actions);&amp;#10;psychoJS.experiment.addData('time in patch (seconds)', 0);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="// define function to load instructions&amp;#10;var instructions = (function () {&amp;#10;    var instructions  = null;&amp;#10;    $.ajax({&amp;#10;        'async': false,&amp;#10;        'global': false,&amp;#10;        'url': &quot;resources/instructions.json&quot;,&amp;#10;        'dataType': &quot;json&quot;,&amp;#10;        'success': function (data) {&amp;#10;            instructions  = data;&amp;#10;        }&amp;#10;    });&amp;#10;    return instructions;&amp;#10;})(); &amp;#10;&amp;#10;if ((intruc_msg_counter===0)) {&amp;#10;task_instruc_msg=instructions.consent.page1&amp;#10;}&amp;#10;&amp;#10;if ((intruc_msg_counter===1)) {&amp;#10;task_instruc_msg=instructions.consent.page2&amp;#10;}&amp;#10;&amp;#10;if ((intruc_msg_counter===2)) {&amp;#10;task_instruc_msg=instructions.consent.page3&amp;#10;}&amp;#10;&amp;#10;if ((intruc_msg_counter===3)) {&amp;#10;task_instruc_msg=instructions.consent.page4&amp;#10;}&amp;#10;&amp;#10;if ((intruc_msg_counter===4)) {&amp;#10;task_instruc_msg=instructions.consent.page5&amp;#10;}&amp;#10;&amp;#10;if ((intruc_msg_counter===5)) {&amp;#10;task_instruc_msg=instructions.consent.page6&amp;#10;}&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((do_instruc===0)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="// update counter&amp;#10;intruc_msg_counter=intruc_msg_counter+1;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="task_instruc_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="task_instruc_txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="task_instruc_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$task_instruc_msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="task_instruc_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="task_instruc_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="screening_qs">
      <CodeComponent name="screening_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="// define button positions for screening qs&amp;#10;button_col = 'black'&amp;#10;button_size=[0.1, 0.1]&amp;#10;button1_pos=[-0.45, -0.15]&amp;#10;button2_pos=[-0.225, -0.15]&amp;#10;button3_pos=[0, -0.15]&amp;#10;button4_pos=[0.225, -0.15]&amp;#10;button5_pos=[0.45, -0.15]&amp;#10;&amp;#10;btxt_col = 'black'&amp;#10;btxt_size=0.03&amp;#10;btxt1_pos=[-0.45, -0.215]&amp;#10;btxt2_pos=[-0.225, -0.215]&amp;#10;btxt3_pos=[0, -0.215]&amp;#10;btxt4_pos=[0.225, -0.215]&amp;#10;btxt5_pos=[0.45, -0.215]" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="// define function to demographic questions&amp;#10;var instructions = (function () {&amp;#10;    var instructions  = null;&amp;#10;    $.ajax({&amp;#10;        'async': false,&amp;#10;        'global': false,&amp;#10;        'url': &quot;resources/instructions.json&quot;,&amp;#10;        'dataType': &quot;json&quot;,&amp;#10;        'success': function (data) {&amp;#10;            instructions  = data;&amp;#10;        }&amp;#10;    });&amp;#10;    return instructions;&amp;#10;})();&amp;#10;&amp;#10;if ((screening_msg_counter===0)) {&amp;#10;psychoJS.experiment.addData('consent_given', 1);&amp;#10;screening_question=instructions.screening.page1&amp;#10;screening_txt=[&quot;blue&quot;, &quot;green&quot;, &quot;black&quot;, &quot;purple&quot;, &quot;red&quot;];&amp;#10;&amp;#10;//slider.ticks=[1,2,3,4,5];&amp;#10;//slider.labels=[&quot;blue&quot;, &quot;green&quot;, &quot;black&quot;, &quot;purple&quot;, &quot;red&quot;];&amp;#10;}&amp;#10;&amp;#10;if ((screening_msg_counter===1)) {&amp;#10;screening_question=instructions.screening.page2&amp;#10;screening_txt=[&quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;, &quot;five&quot;];&amp;#10;&amp;#10;//slider.ticks=[1,2,3,4,5];&amp;#10;//slider.labels=[&quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;, &quot;five&quot;];&amp;#10;}&amp;#10;&amp;#10;//slider._needVertexUpdate = true;&amp;#10;//slider._buildSlider();&amp;#10;//slider.style=[visual.Slider.Style.RADIO]&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((do_screening===0)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((screening_msg_counter===0)) {&amp;#10;    screeningQ1_resp=mouse.clicked_name[0]; //slider.getRating();&amp;#10;    if ((screeningQ1_resp === 'button4')) {&amp;#10;        screeningQ1_passed=1;&amp;#10;        }&amp;#10;    psychoJS.experiment.addData('screeningQ1', screeningQ1_passed);&amp;#10;    }&amp;#10;&amp;#10;if ((screening_msg_counter===1)) {&amp;#10;    screeningQ2_resp=mouse.clicked_name[0]//slider.getRating();&amp;#10;    if ((screeningQ2_resp === 'button3')) {&amp;#10;        screeningQ2_passed=1;&amp;#10;        }&amp;#10;    psychoJS.experiment.addData('screeningQ2', screeningQ2_passed);&amp;#10;    }&amp;#10;&amp;#10;screening_msg_counter=screening_msg_counter+1;&amp;#10;&amp;#10;if ((screening_msg_counter===2)) {&amp;#10;    if ((screeningQ1_passed===0 &amp;&amp; screeningQ2_passed===0)) {&amp;#10;        terminate_expt=1;&amp;#10;        final_msg=&quot;Sorry captain, it looks like you failed both attention checks and cannot continue with the study. Please press space to return to Prolific. Even though you will see the completion code, you will need to return the submission to avoid it being rejected. Thank you for following through.&quot;;&amp;#10;        }&amp;#10;}&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="screening_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$screening_question" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SliderComponent name="slider">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Helvetica" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="set every repeat" val="" valType="list"/>
        <Param name="name" updates="None" val="slider" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.15)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.9, 0.05)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['radio', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="set every repeat" val="" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <PolygonComponent name="button1">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$button_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$button_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="30" valType="int"/>
        <Param name="name" updates="None" val="button1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$button1_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$button_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="button2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$button_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$button_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="30" valType="int"/>
        <Param name="name" updates="None" val="button2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$button2_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$button_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="button3">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$button_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$button_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="30" valType="int"/>
        <Param name="name" updates="None" val="button3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$button3_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$button_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="button4">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$button_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$button_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="30" valType="int"/>
        <Param name="name" updates="None" val="button4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$button4_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$button_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="button5">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$button_col" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$button_col" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="30" valType="int"/>
        <Param name="name" updates="None" val="button5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$button5_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="set every repeat" val="$button_size" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <MouseComponent name="mouse">
        <Param name="clickable" updates="constant" val="button1, button2, button3, button4, button5" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="valid click" valType="str"/>
        <Param name="name" updates="None" val="mouse" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="final" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="name" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <TextComponent name="btxt1">
        <Param name="color" updates="set every repeat" val="$btxt_col" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Helvetica" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="btxt_size" valType="code"/>
        <Param name="name" updates="None" val="btxt1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="btxt1_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$screening_txt[0]" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="btxt2">
        <Param name="color" updates="set every repeat" val="$btxt_col" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="btxt_size" valType="code"/>
        <Param name="name" updates="None" val="btxt2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$btxt2_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$screening_txt[1]" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="btxt3">
        <Param name="color" updates="set every repeat" val="$btxt_col" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="btxt_size" valType="code"/>
        <Param name="name" updates="None" val="btxt3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="btxt3_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$screening_txt[2]" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="btxt4">
        <Param name="color" updates="set every repeat" val="$btxt_col" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="btxt_size" valType="code"/>
        <Param name="name" updates="None" val="btxt4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="btxt4_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$screening_txt[3]" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="btxt5">
        <Param name="color" updates="set every repeat" val="$btxt_col" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="btxt_size" valType="code"/>
        <Param name="name" updates="None" val="btxt5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="btxt5_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$screening_txt[4]" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="task_instruc">
      <CodeComponent name="instruc_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="// define function to load task instructions&amp;#10;var instructions = (function () {&amp;#10;    var instructions  = null;&amp;#10;    $.ajax({&amp;#10;        'async': false,&amp;#10;        'global': false,&amp;#10;        'url': &quot;resources/instructions.json&quot;,&amp;#10;        'dataType': &quot;json&quot;,&amp;#10;        'success': function (data) {&amp;#10;            instructions  = data;&amp;#10;        }&amp;#10;    });&amp;#10;    return instructions;&amp;#10;})(); &amp;#10;&amp;#10;if ((task_instruc_msg_counter==0)) {&amp;#10;    task_instruction_txt=instructions.task.page1&amp;#10;}&amp;#10;&amp;#10;if ((task_instruc_msg_counter==1)) {&amp;#10;    task_instruction_txt=instructions.task.page2&amp;#10;}&amp;#10;&amp;#10;if ((task_instruc_msg_counter==2)) {&amp;#10;    task_instruction_txt=instructions.task.page3&amp;#10;}&amp;#10;&amp;#10;if ((task_instruc_msg_counter==3)) {&amp;#10;    task_instruction_txt=instructions.task.page4&amp;#10;}&amp;#10;&amp;#10;if ((task_instruc_msg_counter==4)) {&amp;#10;    task_instruction_txt=instructions.task.page5&amp;#10;}&amp;#10;&amp;#10;if ((task_instruc_msg_counter==5)) {&amp;#10;    task_instruction_txt=instructions.task.page6&amp;#10;}&amp;#10;&amp;#10;if ((task_instruc_msg_counter==6)) {&amp;#10;    task_instruction_txt=instructions.task.page7&amp;#10;}&amp;#10;&amp;#10;if ((task_instruc_msg_counter==7)) {&amp;#10;    task_instruction_txt=instructions.task.page8&amp;#10;}&amp;#10;&amp;#10;if ((task_instruc_msg_counter==8)) {&amp;#10;    task_instruction_txt=instructions.task.page9&amp;#10;}&amp;#10;&amp;#10;if ((task_instruc_msg_counter==9)) {&amp;#10;    task_instruc_img_opacity=0;&amp;#10;    task_instruc_txt_pos=[0,0];&amp;#10;    task_instruc_space_txt_pos=[0, -0.1]&amp;#10;    task_instruction_txt=instructions.task.page10&amp;#10;}&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((do_task_instruc===0)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }&amp;#10;&amp;#10;if ((terminate_expt===1)) {&amp;#10;    continueRoutine=false;&amp;#10;    trials.finished=true;&amp;#10;    }" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="task_instruc_msg_counter=task_instruc_msg_counter+1;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instruc_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="instruc_txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="instruc_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$task_instruc_txt_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$task_instruction_txt" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="instruc_image">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$instruc_imgs[task_instruc_msg_counter]" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="instruc_image" valType="code"/>
        <Param name="opacity" updates="set every repeat" val="$task_instruc_img_opacity" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.05)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.5, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="text_4">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="text_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$task_instruc_space_txt_pos" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press space to continue" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="close_expt">
      <TextComponent name="closing_msg_txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="closing_msg_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="20" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$final_msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="closing_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="closing_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="20" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="trials_welcome">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="num_welcome" valType="code"/>
      <Param name="name" updates="None" val="trials_welcome" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="welcome"/>
    <LoopTerminator name="trials_welcome"/>
    <LoopInitiator loopType="TrialHandler" name="trials_screening">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="num_screening_questions" valType="code"/>
      <Param name="name" updates="None" val="trials_screening" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="screening_qs"/>
    <LoopTerminator name="trials_screening"/>
    <LoopInitiator loopType="TrialHandler" name="trials_demographics">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="num_demographic_questions" valType="code"/>
      <Param name="name" updates="None" val="trials_demographics" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="demographics"/>
    <LoopTerminator name="trials_demographics"/>
    <LoopInitiator loopType="TrialHandler" name="trials_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="num_instruction_trials" valType="code"/>
      <Param name="name" updates="None" val="trials_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="task_instruc"/>
    <LoopTerminator name="trials_instructions"/>
    <LoopInitiator loopType="TrialHandler" name="blk_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="total_blk_number" valType="code"/>
      <Param name="name" updates="None" val="blk_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="blk_instruc"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="total_actions_allowed" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="select"/>
    <Routine name="travel"/>
    <LoopInitiator loopType="TrialHandler" name="exploit_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="total_actions_allowed" valType="code"/>
      <Param name="name" updates="None" val="exploit_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="exploit"/>
    <Routine name="exploit_fbk"/>
    <LoopTerminator name="exploit_loop"/>
    <LoopTerminator name="trials"/>
    <Routine name="post_blk_msg"/>
    <LoopTerminator name="blk_loop"/>
    <Routine name="close_expt"/>
  </Flow>
</PsychoPy2experiment>
