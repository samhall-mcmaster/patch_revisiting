DFB = DF[,4:6]
DFB$cond = 'B'
DFB$ID = seq(dim(DFB)[1])
names(DFA)[1] <- "Slow"
names(DFA)[2] <- "Medium"
names(DFA)[3] <- "Fast"
names(DFB)[1] <- "Slow"
names(DFB)[2] <- "Medium"
names(DFB)[3] <- "Fast"
DFplot = rbind(DFA,DFB)
#mean
DFmean = data.frame(slow = c(mean(DFA$Slow),mean(DFB$Slow)),
medium=c(mean(DFA$Medium),mean(DFB$Medium)),
fast=c(mean(DFA$Fast),mean(DFB$Fast)),
cond=c('A','B'))
# model
DFm = data.frame(cond = DFplot$cond)
DFm$Y = DR_data(DFplot[,c('Slow','Medium','Fast')])
Model.cond <- DirichReg(Y ~ cond| 1, DFm, base=1, model = "alternative", control= list(iterlim=1000))
summary(Model.cond)
Mp = predict(Model.cond,DFm)
DFplot$slow.p = Mp[,1]
DFplot$medium.p = Mp[,2]
DFplot$fast.p = Mp[,3]
# for plot limits
min(DFm$Y)
max(DFm$Y)
labFnc <- function(x,digits=2) format(round(unique(x),digits),digits=digits)
breaks=seq(0.3,0.5,0.1)
PlotAll = ggtern(DFplot, aes(Slow,Medium,Fast))+
scale_T_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
scale_L_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks))+#,breaks=unique(DFplot$Slow),labels=labFnc(DFplot$Slow)) +
scale_R_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks))+#,breaks=unique(DFplot$Fast),labels=labFnc(DFplot$Fast)) +
theme_custom(base_size=12, base_family="Helvetica", tern.panel.background = "white",
col.T = rgb(72/255,36/255,118/255),col.L = rgb(191/255,148/255,228/255),col.R = rgb(8/255,9/255,66/255)) +
theme_arrowlong() + theme_showgrid_major() +
Tlab(label = "Medium patch", labelarrow = "Prop. visits to medium") +
Llab(label = "Slow patch", labelarrow = "Prop. visits to slow") +
Rlab(label = "Fast patch", labelarrow = "Prop. visits to fast") +
#geom_Tline(Tintercept = 1/3,size=1,color='darkred')+
#geom_Rline(Rintercept=1/3,size=1,color='darkgreen')+
#geom_Lline(Lintercept = 1/3,size=1,color='darkblue')+
geom_point(aes(color=as.factor(cond)),size=1,alpha=0.4, show.legend = FALSE)+
geom_point(data=DFmean,aes(slow,medium,fast,color=as.factor(cond)),size=3,shape=15, show.legend = TRUE)+
#geom_Lmark(aes(slow.p,medium.p,fast.p),colour='darkblue')+
#geom_Tmark(aes(slow.p,medium.p,fast.p),colour='darkred')+
#geom_Rmark(aes(slow.p,medium.p,fast.p),colour='darkgreen') +
#geom_point(aes(slow.p,medium.p,fast.p,color=as.factor(cond)),size=3,shape=17) +
scale_color_manual("Choice condition", labels = c("Forced", "Free"), values = c(rgb(1,0.549,0), rgb(0.1961,0.7647,0.2745))) +
theme(tern.axis.title.L = element_text(hjust = 0), tern.axis.title.R = element_text(hjust = 1),
tern.panel.grid.major.T = element_line(colour=rgb(132/255,77/255,163/255), size=0.5, linetype = "dashed"),
tern.panel.grid.major.L = element_line(colour=rgb(145/255,61/255,136/255), size=0.5, linetype = "dashed"),
tern.panel.grid.major.R = element_line(colour=rgb(0/255,0/255,0/255), size=0.5, linetype = "dashed"),
tern.axis.text = element_text(size=10), legend.key = element_blank(),
tern.axis.line.T = element_line(size=0.5),
tern.axis.line.L = element_line(size=0.5),
tern.axis.line.R = element_line(size=0.5))
PlotAll
#ggsave("full_plot.png", dpi = 300)
library(ggtern)
library(DirichletReg)
library(ggplot2)
setwd("./Documents/Papers/Foraging/Code_package/Code_analysis/Fig2/")
DF = data.table::fread('proportion_visits.csv', header = TRUE)
DF$ID = seq(dim(DF)[1])
DFA = DF[,1:3]
DFA$cond = 'A'
DFA$ID = seq(dim(DFA)[1])
DFB = DF[,4:6]
DFB$cond = 'B'
DFB$ID = seq(dim(DFB)[1])
names(DFA)[1] <- "Slow"
names(DFA)[2] <- "Medium"
names(DFA)[3] <- "Fast"
names(DFB)[1] <- "Slow"
names(DFB)[2] <- "Medium"
names(DFB)[3] <- "Fast"
DFplot = rbind(DFA,DFB)
#mean
DFmean = data.frame(slow = c(mean(DFA$Slow),mean(DFB$Slow)),
medium=c(mean(DFA$Medium),mean(DFB$Medium)),
fast=c(mean(DFA$Fast),mean(DFB$Fast)),
cond=c('A','B'))
# model
DFm = data.frame(cond = DFplot$cond)
DFm$Y = DR_data(DFplot[,c('Slow','Medium','Fast')])
Model.cond <- DirichReg(Y ~ cond| 1, DFm, base=1, model = "alternative", control= list(iterlim=1000))
summary(Model.cond)
Mp = predict(Model.cond,DFm)
DFplot$slow.p = Mp[,1]
DFplot$medium.p = Mp[,2]
DFplot$fast.p = Mp[,3]
# for plot limits
min(DFm$Y)
max(DFm$Y)
labFnc <- function(x,digits=2) format(round(unique(x),digits),digits=digits)
breaks=seq(0.3,0.5,0.1)
PlotAll = ggtern(DFplot, aes(Slow,Medium,Fast))+
scale_T_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
scale_L_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks))+#,breaks=unique(DFplot$Slow),labels=labFnc(DFplot$Slow)) +
scale_R_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks))+#,breaks=unique(DFplot$Fast),labels=labFnc(DFplot$Fast)) +
theme_custom(base_size=12, base_family="Helvetica", tern.panel.background = "white",
col.T = rgb(72/255,36/255,118/255),col.L = rgb(181/255,126/255,220/255),col.R = rgb(8/255,9/255,66/255)) +
theme_arrowlong() + theme_showgrid_major() +
Tlab(label = "Medium patch", labelarrow = "Prop. visits to medium") +
Llab(label = "Slow patch", labelarrow = "Prop. visits to slow") +
Rlab(label = "Fast patch", labelarrow = "Prop. visits to fast") +
#geom_Tline(Tintercept = 1/3,size=1,color='darkred')+
#geom_Rline(Rintercept=1/3,size=1,color='darkgreen')+
#geom_Lline(Lintercept = 1/3,size=1,color='darkblue')+
geom_point(aes(color=as.factor(cond)),size=1,alpha=0.4, show.legend = FALSE)+
geom_point(data=DFmean,aes(slow,medium,fast,color=as.factor(cond)),size=3,shape=15, show.legend = TRUE)+
#geom_Lmark(aes(slow.p,medium.p,fast.p),colour='darkblue')+
#geom_Tmark(aes(slow.p,medium.p,fast.p),colour='darkred')+
#geom_Rmark(aes(slow.p,medium.p,fast.p),colour='darkgreen') +
#geom_point(aes(slow.p,medium.p,fast.p,color=as.factor(cond)),size=3,shape=17) +
scale_color_manual("Choice condition", labels = c("Forced", "Free"), values = c(rgb(1,0.549,0), rgb(0.1961,0.7647,0.2745))) +
theme(tern.axis.title.L = element_text(hjust = 0), tern.axis.title.R = element_text(hjust = 1),
tern.panel.grid.major.T = element_line(colour=rgb(132/255,77/255,163/255), size=0.5, linetype = "dashed"),
tern.panel.grid.major.L = element_line(colour=rgb(145/255,61/255,136/255), size=0.5, linetype = "dashed"),
tern.panel.grid.major.R = element_line(colour=rgb(0/255,0/255,0/255), size=0.5, linetype = "dashed"),
tern.axis.text = element_text(size=10), legend.key = element_blank(),
tern.axis.line.T = element_line(size=0.5),
tern.axis.line.L = element_line(size=0.5),
tern.axis.line.R = element_line(size=0.5))
PlotAll
#ggsave("full_plot.png", dpi = 300)
PlotAll = ggtern(DFplot, aes(Slow,Medium,Fast))+
scale_T_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
scale_L_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks))+#,breaks=unique(DFplot$Slow),labels=labFnc(DFplot$Slow)) +
scale_R_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks))+#,breaks=unique(DFplot$Fast),labels=labFnc(DFplot$Fast)) +
theme_custom(base_size=12, base_family="Helvetica", tern.panel.background = "white",
col.T = rgb(102/255,59/255,148/255),col.L = rgb(181/255,126/255,220/255),col.R = rgb(8/255,9/255,66/255)) +
theme_arrowlong() + theme_showgrid_major() +
Tlab(label = "Medium patch", labelarrow = "Prop. visits to medium") +
Llab(label = "Slow patch", labelarrow = "Prop. visits to slow") +
Rlab(label = "Fast patch", labelarrow = "Prop. visits to fast") +
#geom_Tline(Tintercept = 1/3,size=1,color='darkred')+
#geom_Rline(Rintercept=1/3,size=1,color='darkgreen')+
#geom_Lline(Lintercept = 1/3,size=1,color='darkblue')+
geom_point(aes(color=as.factor(cond)),size=1,alpha=0.4, show.legend = FALSE)+
geom_point(data=DFmean,aes(slow,medium,fast,color=as.factor(cond)),size=3,shape=15, show.legend = TRUE)+
#geom_Lmark(aes(slow.p,medium.p,fast.p),colour='darkblue')+
#geom_Tmark(aes(slow.p,medium.p,fast.p),colour='darkred')+
#geom_Rmark(aes(slow.p,medium.p,fast.p),colour='darkgreen') +
#geom_point(aes(slow.p,medium.p,fast.p,color=as.factor(cond)),size=3,shape=17) +
scale_color_manual("Choice condition", labels = c("Forced", "Free"), values = c(rgb(1,0.549,0), rgb(0.1961,0.7647,0.2745))) +
theme(tern.axis.title.L = element_text(hjust = 0), tern.axis.title.R = element_text(hjust = 1),
tern.panel.grid.major.T = element_line(colour=rgb(132/255,77/255,163/255), size=0.5, linetype = "dashed"),
tern.panel.grid.major.L = element_line(colour=rgb(145/255,61/255,136/255), size=0.5, linetype = "dashed"),
tern.panel.grid.major.R = element_line(colour=rgb(0/255,0/255,0/255), size=0.5, linetype = "dashed"),
tern.axis.text = element_text(size=10), legend.key = element_blank(),
tern.axis.line.T = element_line(size=0.5),
tern.axis.line.L = element_line(size=0.5),
tern.axis.line.R = element_line(size=0.5))
library(ggtern)
library(DirichletReg)
library(ggplot2)
setwd("./Documents/Papers/Foraging/Code_package/Code_analysis/Fig2/")
DF = data.table::fread('proportion_visits.csv', header = TRUE)
DF$ID = seq(dim(DF)[1])
DFA = DF[,1:3]
DFA$cond = 'A'
DFA$ID = seq(dim(DFA)[1])
DFB = DF[,4:6]
DFB$cond = 'B'
DFB$ID = seq(dim(DFB)[1])
names(DFA)[1] <- "Slow"
names(DFA)[2] <- "Medium"
names(DFA)[3] <- "Fast"
names(DFB)[1] <- "Slow"
names(DFB)[2] <- "Medium"
names(DFB)[3] <- "Fast"
DFplot = rbind(DFA,DFB)
#mean
DFmean = data.frame(slow = c(mean(DFA$Slow),mean(DFB$Slow)),
medium=c(mean(DFA$Medium),mean(DFB$Medium)),
fast=c(mean(DFA$Fast),mean(DFB$Fast)),
cond=c('A','B'))
# model
DFm = data.frame(cond = DFplot$cond)
DFm$Y = DR_data(DFplot[,c('Slow','Medium','Fast')])
Model.cond <- DirichReg(Y ~ cond| 1, DFm, base=1, model = "alternative", control= list(iterlim=1000))
summary(Model.cond)
Mp = predict(Model.cond,DFm)
DFplot$slow.p = Mp[,1]
DFplot$medium.p = Mp[,2]
DFplot$fast.p = Mp[,3]
# for plot limits
min(DFm$Y)
max(DFm$Y)
labFnc <- function(x,digits=2) format(round(unique(x),digits),digits=digits)
breaks=seq(0.3,0.5,0.1)
PlotAll = ggtern(DFplot, aes(Slow,Medium,Fast))+
scale_T_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
scale_L_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks))+#,breaks=unique(DFplot$Slow),labels=labFnc(DFplot$Slow)) +
scale_R_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks))+#,breaks=unique(DFplot$Fast),labels=labFnc(DFplot$Fast)) +
theme_custom(base_size=12, base_family="Helvetica", tern.panel.background = "white",
col.T = rgb(102/255,59/255,148/255),col.L = rgb(181/255,126/255,220/255),col.R = rgb(8/255,9/255,66/255)) +
theme_arrowlong() + theme_showgrid_major() +
Tlab(label = "Medium patch", labelarrow = "Prop. visits to medium") +
Llab(label = "Slow patch", labelarrow = "Prop. visits to slow") +
Rlab(label = "Fast patch", labelarrow = "Prop. visits to fast") +
#geom_Tline(Tintercept = 1/3,size=1,color='darkred')+
#geom_Rline(Rintercept=1/3,size=1,color='darkgreen')+
#geom_Lline(Lintercept = 1/3,size=1,color='darkblue')+
geom_point(aes(color=as.factor(cond)),size=1,alpha=0.4, show.legend = FALSE)+
geom_point(data=DFmean,aes(slow,medium,fast,color=as.factor(cond)),size=3,shape=15, show.legend = TRUE)+
#geom_Lmark(aes(slow.p,medium.p,fast.p),colour='darkblue')+
#geom_Tmark(aes(slow.p,medium.p,fast.p),colour='darkred')+
#geom_Rmark(aes(slow.p,medium.p,fast.p),colour='darkgreen') +
#geom_point(aes(slow.p,medium.p,fast.p,color=as.factor(cond)),size=3,shape=17) +
scale_color_manual("Choice condition", labels = c("Forced", "Free"), values = c(rgb(1,0.549,0), rgb(0.1961,0.7647,0.2745))) +
theme(tern.axis.title.L = element_text(hjust = 0), tern.axis.title.R = element_text(hjust = 1),
tern.panel.grid.major.T = element_line(colour=rgb(132/255,77/255,163/255), size=0.5, linetype = "dashed"),
tern.panel.grid.major.L = element_line(colour=rgb(145/255,61/255,136/255), size=0.5, linetype = "dashed"),
tern.panel.grid.major.R = element_line(colour=rgb(0/255,0/255,0/255), size=0.5, linetype = "dashed"),
tern.axis.text = element_text(size=10), legend.key = element_blank(),
tern.axis.line.T = element_line(size=0.5),
tern.axis.line.L = element_line(size=0.5),
tern.axis.line.R = element_line(size=0.5))
PlotAll
#ggsave("full_plot.png", dpi = 300)
library(ggtern)
library(DirichletReg)
library(ggplot2)
setwd("./Documents/Papers/Foraging/Code_package/Code_analysis/Fig2/")
DF = data.table::fread('proportion_visits.csv', header = TRUE)
DF$ID = seq(dim(DF)[1])
DFA = DF[,1:3]
DFA$cond = 'A'
DFA$ID = seq(dim(DFA)[1])
DFB = DF[,4:6]
DFB$cond = 'B'
DFB$ID = seq(dim(DFB)[1])
names(DFA)[1] <- "Slow"
names(DFA)[2] <- "Medium"
names(DFA)[3] <- "Fast"
names(DFB)[1] <- "Slow"
names(DFB)[2] <- "Medium"
names(DFB)[3] <- "Fast"
DFplot = rbind(DFA,DFB)
#mean
DFmean = data.frame(slow = c(mean(DFA$Slow),mean(DFB$Slow)),
medium=c(mean(DFA$Medium),mean(DFB$Medium)),
fast=c(mean(DFA$Fast),mean(DFB$Fast)),
cond=c('A','B'))
# model
DFm = data.frame(cond = DFplot$cond)
DFm$Y = DR_data(DFplot[,c('Slow','Medium','Fast')])
Model.cond <- DirichReg(Y ~ cond| 1, DFm, base=1, model = "alternative", control= list(iterlim=1000))
summary(Model.cond)
Mp = predict(Model.cond,DFm)
DFplot$slow.p = Mp[,1]
DFplot$medium.p = Mp[,2]
DFplot$fast.p = Mp[,3]
# for plot limits
min(DFm$Y)
max(DFm$Y)
labFnc <- function(x,digits=2) format(round(unique(x),digits),digits=digits)
breaks=seq(0.3,0.5,0.1)
PlotAll = ggtern(DFplot, aes(Slow,Medium,Fast))+
scale_T_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
scale_L_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks))+#,breaks=unique(DFplot$Slow),labels=labFnc(DFplot$Slow)) +
scale_R_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks))+#,breaks=unique(DFplot$Fast),labels=labFnc(DFplot$Fast)) +
theme_custom(base_size=12, base_family="Helvetica", tern.panel.background = "white",
col.T = rgb(72/255,36/255,118/255),col.L = rgb(181/255,126/255,220/255),col.R = rgb(8/255,9/255,66/255)) +
theme_arrowlong() + theme_showgrid_major() +
Tlab(label = "Medium patch", labelarrow = "Prop. visits to medium") +
Llab(label = "Slow patch", labelarrow = "Prop. visits to slow") +
Rlab(label = "Fast patch", labelarrow = "Prop. visits to fast") +
#geom_Tline(Tintercept = 1/3,size=1,color='darkred')+
#geom_Rline(Rintercept=1/3,size=1,color='darkgreen')+
#geom_Lline(Lintercept = 1/3,size=1,color='darkblue')+
geom_point(aes(color=as.factor(cond)),size=1,alpha=0.4, show.legend = FALSE)+
geom_point(data=DFmean,aes(slow,medium,fast,color=as.factor(cond)),size=3,shape=15, show.legend = TRUE)+
#geom_Lmark(aes(slow.p,medium.p,fast.p),colour='darkblue')+
#geom_Tmark(aes(slow.p,medium.p,fast.p),colour='darkred')+
#geom_Rmark(aes(slow.p,medium.p,fast.p),colour='darkgreen') +
#geom_point(aes(slow.p,medium.p,fast.p,color=as.factor(cond)),size=3,shape=17) +
scale_color_manual("Choice condition", labels = c("Forced", "Free"), values = c(rgb(1,0.549,0), rgb(0.1961,0.7647,0.2745))) +
theme(tern.axis.title.L = element_text(hjust = 0), tern.axis.title.R = element_text(hjust = 1),
tern.panel.grid.major.T = element_line(colour=rgb(132/255,77/255,163/255), size=0.5, linetype = "dashed"),
tern.panel.grid.major.L = element_line(colour=rgb(145/255,61/255,136/255), size=0.5, linetype = "dashed"),
tern.panel.grid.major.R = element_line(colour=rgb(0/255,0/255,0/255), size=0.5, linetype = "dashed"),
tern.axis.text = element_text(size=10), legend.key = element_blank(),
tern.axis.line.T = element_line(size=0.5),
tern.axis.line.L = element_line(size=0.5),
tern.axis.line.R = element_line(size=0.5))
PlotAll
#ggsave("full_plot.png", dpi = 300)
here:here()
here::here()
file.path(Dir,'proportion_visits.csv')
###### set path and load data ------
Dir <- here::here()
file.path(Dir,'proportion_visits.csv')
View(DF)
DF$ID = seq(dim(DF)[1])
DF_forced = DF[,1:3]
DF_forced$cond = 'Forced'
DF_forced$ID = seq(dim(DF_forced)[1])
DF_free = DF[,4:6]
DF_free$cond = 'Free'
DF_free$ID = seq(dim(DF_free)[1])
View(DF_forced)
View(DF_free)
names(DF_forced)[1] <- "Slow"
names(DF_forced)[2] <- "Medium"
names(DF_forced)[3] <- "Fast"
names(DF_free)[1] <- "Slow"
names(DF_free)[2] <- "Medium"
names(DF_free)[3] <- "Fast"
DFplot = rbind(DF_forced,DF_free)
View(DFplot)
DF = data.table::fread(file.path(Dir,'proportion_visits.csv'), header = TRUE)
DF$ID = seq(dim(DF)[1])
DF_forced = DF[,1:3]
DF_forced$cond = 'Forced'
DF_forced$ID = seq(dim(DF_forced)[1])
col.names(DF_forced) <- c("Slow", "Medium", "Fast", "cond", "ID")
colnames(DF_forced) <- c("Slow", "Medium", "Fast", "cond", "ID")
Dir <- here::here()
DF = data.table::fread(file.path(Dir,'proportion_visits.csv'), header = TRUE)
DF$ID = seq(dim(DF)[1])
DF_forced = DF[,1:3]
DF_forced$cond = 'Forced'
DF_forced$ID = seq(dim(DF_forced)[1])
DF_free = DF[,4:6]
DF_free$cond = 'Free'
DF_free$ID = seq(dim(DF_free)[1])
colnames(DF_forced) <- c("Slow", "Medium", "Fast", "cond", "ID")
colnames(DF_free) <- c("Slow", "Medium", "Fast", "cond", "ID")
DFplot = rbind(DF_forced,DF_free)
###### Calculate mean for plotting ------
DFmean = data.frame(slow = c(mean(DF_forced$Slow),mean(DF_free$Slow)),
medium=c(mean(DF_forced$Medium),mean(DF_free$Medium)),
fast=c(mean(DF_forced$Fast),mean(DF_free$Fast)),
cond=c('Forced','Free'))
View(DFmean)
0.549*255
0.1961*255
0.7647*255
0.2745*255
###### load packages ------
library(ggtern)
library(here)
library(ggplot2)
###### set path and load data ------
Dir <- here::here()
DF = data.table::fread(file.path(Dir,'proportion_visits.csv'), header = TRUE)
DF$ID = seq(dim(DF)[1])
DF_forced = DF[,1:3]
DF_forced$cond = 'Forced'
DF_forced$ID = seq(dim(DF_forced)[1])
DF_free = DF[,4:6]
DF_free$cond = 'Free'
DF_free$ID = seq(dim(DF_free)[1])
colnames(DF_forced) <- c("Slow", "Medium", "Fast", "cond", "ID")
colnames(DF_free) <- c("Slow", "Medium", "Fast", "cond", "ID")
DFplot = rbind(DF_forced,DF_free)
###### Calculate mean for plotting ------
DFmean = data.frame(slow = c(mean(DF_forced$Slow),mean(DF_free$Slow)),
medium=c(mean(DF_forced$Medium),mean(DF_free$Medium)),
fast=c(mean(DF_forced$Fast),mean(DF_free$Fast)),
cond=c('Forced','Free'))
###### Set up plot limits and colours ------
min(DFm$Y)
max(DFm$Y)
labFnc <- function(x,digits=2) format(round(unique(x),digits),digits=digits)
breaks=seq(0.3,0.5,0.1)
colFst=rgb(65/255,25/255,138/255)
colMid=rgb(144/255,100/255,227/255)
colSlw=rgb(194/255,170/255,240/255)
###### Probability triangle plot ------
PlotAll = ggtern(DFplot, aes(Slow,Medium,Fast)) +
geom_point(aes(color=as.factor(cond)),size=1,alpha=0.4, show.legend = FALSE) +
geom_point(data=DFmean,aes(slow,medium,fast,color=as.factor(cond)),size=3,shape=15, show.legend = TRUE) +
scale_T_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
scale_L_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
scale_R_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
Tlab(label = "Medium Patch", labelarrow = "Proportion of Visits to Medium") +
Llab(label = "Slow Patch", labelarrow = "Proportion of Visits to Slow") +
Rlab(label = "Fast Patch", labelarrow = "Proportion of Visits to Fast") +
theme_custom(base_size=12, base_family="Helvetica", tern.panel.background = "white",
col.T = colMid, col.L = colSlw, col.R = colFst) +
theme_arrowlong() + theme_showgrid_major() +
scale_color_manual("Choice condition", labels = c("Forced", "Free"), values = c(rgb(255/255,140/255,0/255), rgb(50/255,195/255,70/255))) +
theme(tern.axis.title.L = element_text(hjust = 0), tern.axis.title.R = element_text(hjust = 1),
tern.panel.grid.major.T = element_line(colour=colMid, size=0.5, linetype = "dashed"),
tern.panel.grid.major.L = element_line(colour=colSlw, size=0.5, linetype = "dashed"),
tern.panel.grid.major.R = element_line(colour=colFst, size=0.5, linetype = "dashed"),
tern.axis.text = element_text(size=10), legend.key = element_blank(),
tern.axis.line.T = element_line(size=0.5),
tern.axis.line.L = element_line(size=0.5),
tern.axis.line.R = element_line(size=0.5))
PlotAll
PlotAll
###### Save plot ------
plotDir <- "figures"
file.path(Dir,plotDir,"full_plot_blacl.png")
###### Save plot ------
plotDir <- "figures"
if(!dir.exists(file.path(Dir,plotDir))){dir.create(file.path(Dir,plotDir))}
list(ls())
rm(list(ls()))
rm(list=ls())
library(here)
library(ggplot2)
###### set path and load data ------
# To run this file, open Fig2.Rproj, then open Fig2A_simplex.R
Dir <- here::here()
DF = data.table::fread(file.path(Dir,'proportion_visits.csv'), header = TRUE)
DF$ID = seq(dim(DF)[1])
DF_forced = DF[,1:3]
DF_forced$cond = 'Forced'
DF_forced$ID = seq(dim(DF_forced)[1])
DF_free = DF[,4:6]
DF_free$cond = 'Free'
DF_free$ID = seq(dim(DF_free)[1])
colnames(DF_forced) <- c("Slow", "Medium", "Fast", "cond", "ID")
colnames(DF_free) <- c("Slow", "Medium", "Fast", "cond", "ID")
DFplot = rbind(DF_forced,DF_free)
###### Calculate mean for plotting ------
DFmean = data.frame(slow = c(mean(DF_forced$Slow),mean(DF_free$Slow)),
medium=c(mean(DF_forced$Medium),mean(DF_free$Medium)),
fast=c(mean(DF_forced$Fast),mean(DF_free$Fast)),
cond=c('Forced','Free'))
###### Set up plot limits and colours ------
min(DFm$Y)
max(DFm$Y)
labFnc <- function(x,digits=2) format(round(unique(x),digits),digits=digits)
breaks=seq(0.3,0.5,0.1)
colFst=rgb(65/255,25/255,138/255)
colMid=rgb(144/255,100/255,227/255)
colSlw=rgb(194/255,170/255,240/255)
###### Probability triangle plot ------
PlotAll = ggtern(DFplot, aes(Slow,Medium,Fast)) +
geom_point(aes(color=as.factor(cond)),size=1,alpha=0.4, show.legend = FALSE) +
geom_point(data=DFmean,aes(slow,medium,fast,color=as.factor(cond)),size=3,shape=15, show.legend = TRUE) +
scale_T_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
scale_L_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
scale_R_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
Tlab(label = "Medium Patch", labelarrow = "Proportion of Visits to Medium") +
Llab(label = "Slow Patch", labelarrow = "Proportion of Visits to Slow") +
Rlab(label = "Fast Patch", labelarrow = "Proportion of Visits to Fast") +
theme_custom(base_size=12, base_family="Helvetica", tern.panel.background = "white",
col.T = colMid, col.L = colSlw, col.R = colFst) +
theme_arrowlong() + theme_showgrid_major() +
scale_color_manual("Choice condition", labels = c("Forced", "Free"), values = c(rgb(255/255,140/255,0/255), rgb(50/255,195/255,70/255))) +
theme(tern.axis.title.L = element_text(hjust = 0), tern.axis.title.R = element_text(hjust = 1),
tern.panel.grid.major.T = element_line(colour=colMid, size=0.5, linetype = "dashed"),
tern.panel.grid.major.L = element_line(colour=colSlw, size=0.5, linetype = "dashed"),
tern.panel.grid.major.R = element_line(colour=colFst, size=0.5, linetype = "dashed"),
tern.axis.text = element_text(size=10), legend.key = element_blank(),
tern.axis.line.T = element_line(size=0.5),
tern.axis.line.L = element_line(size=0.5),
tern.axis.line.R = element_line(size=0.5))
PlotAll
library(ggtern)
library(here)
library(ggplot2)
###### set path and load data ------
# To run this file, open Fig2.Rproj, then open Fig2A_simplex.R
Dir <- here::here()
DF = data.table::fread(file.path(Dir,'proportion_visits.csv'), header = TRUE)
DF$ID = seq(dim(DF)[1])
DF_forced = DF[,1:3]
DF_forced$cond = 'Forced'
DF_forced$ID = seq(dim(DF_forced)[1])
DF_free = DF[,4:6]
DF_free$cond = 'Free'
DF_free$ID = seq(dim(DF_free)[1])
colnames(DF_forced) <- c("Slow", "Medium", "Fast", "cond", "ID")
colnames(DF_free) <- c("Slow", "Medium", "Fast", "cond", "ID")
DFplot = rbind(DF_forced,DF_free)
###### Calculate mean for plotting ------
DFmean = data.frame(slow = c(mean(DF_forced$Slow),mean(DF_free$Slow)),
medium=c(mean(DF_forced$Medium),mean(DF_free$Medium)),
fast=c(mean(DF_forced$Fast),mean(DF_free$Fast)),
cond=c('Forced','Free'))
###### Set up plot limits and colours ------
min(DFm$Y)
max(DFm$Y)
labFnc <- function(x,digits=2) format(round(unique(x),digits),digits=digits)
breaks=seq(0.3,0.5,0.1)
colFst=rgb(65/255,25/255,138/255)
colMid=rgb(144/255,100/255,227/255)
colSlw=rgb(194/255,170/255,240/255)
###### Probability triangle plot ------
PlotAll = ggtern(DFplot, aes(Slow,Medium,Fast)) +
geom_point(aes(color=as.factor(cond)),size=1,alpha=0.4, show.legend = FALSE) +
geom_point(data=DFmean,aes(slow,medium,fast,color=as.factor(cond)),size=3,shape=15, show.legend = TRUE) +
scale_T_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
scale_L_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
scale_R_continuous(limits=c(0.2,0.6), breaks = seq(0.3,0.5,0.1), labels=labFnc(breaks)) +
Tlab(label = "Medium Patch", labelarrow = "Proportion of Visits to Medium") +
Llab(label = "Slow Patch", labelarrow = "Proportion of Visits to Slow") +
Rlab(label = "Fast Patch", labelarrow = "Proportion of Visits to Fast") +
theme_custom(base_size=12, base_family="Helvetica", tern.panel.background = "white",
col.T = colMid, col.L = colSlw, col.R = colFst) +
theme_arrowlong() + theme_showgrid_major() +
scale_color_manual("Choice condition", labels = c("Forced", "Free"), values = c(rgb(255/255,140/255,0/255), rgb(50/255,195/255,70/255))) +
theme(tern.axis.title.L = element_text(hjust = 0), tern.axis.title.R = element_text(hjust = 1),
tern.panel.grid.major.T = element_line(colour=colMid, size=0.5, linetype = "dashed"),
tern.panel.grid.major.L = element_line(colour=colSlw, size=0.5, linetype = "dashed"),
tern.panel.grid.major.R = element_line(colour=colFst, size=0.5, linetype = "dashed"),
tern.axis.text = element_text(size=10), legend.key = element_blank(),
tern.axis.line.T = element_line(size=0.5),
tern.axis.line.L = element_line(size=0.5),
tern.axis.line.R = element_line(size=0.5))
PlotAll
